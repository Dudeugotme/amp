// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/account/permission.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/account/permission.proto

It has these top-level messages:
	Ressource
	GrantRequest
	ListPermissionRequest
	ListPermissionReply
	EditPermissionRequest
	RevokeRequest
	TransferOwnershipRequest
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ressource struct
type Ressource struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Team         string `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	Level        string `protobuf:"bytes,3,opt,name=level" json:"level,omitempty"`
	ResourceId   string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *Ressource) Reset()                    { *m = Ressource{} }
func (m *Ressource) String() string            { return proto.CompactTextString(m) }
func (*Ressource) ProtoMessage()               {}
func (*Ressource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ressource) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Ressource) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Ressource) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Ressource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

// Grant function
type GrantRequest struct {
	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource" json:"ressource,omitempty"`
}

func (m *GrantRequest) Reset()                    { *m = GrantRequest{} }
func (m *GrantRequest) String() string            { return proto.CompactTextString(m) }
func (*GrantRequest) ProtoMessage()               {}
func (*GrantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GrantRequest) GetRessource() *Ressource {
	if m != nil {
		return m.Ressource
	}
	return nil
}

// List function
type ListPermissionRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Team         string `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	Level        string `protobuf:"bytes,3,opt,name=level" json:"level,omitempty"`
	ResourceId   string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *ListPermissionRequest) Reset()                    { *m = ListPermissionRequest{} }
func (m *ListPermissionRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPermissionRequest) ProtoMessage()               {}
func (*ListPermissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListPermissionRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *ListPermissionRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *ListPermissionRequest) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *ListPermissionRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type ListPermissionReply struct {
	Ressources []*Ressource `protobuf:"bytes,1,rep,name=ressources" json:"ressources,omitempty"`
}

func (m *ListPermissionReply) Reset()                    { *m = ListPermissionReply{} }
func (m *ListPermissionReply) String() string            { return proto.CompactTextString(m) }
func (*ListPermissionReply) ProtoMessage()               {}
func (*ListPermissionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListPermissionReply) GetRessources() []*Ressource {
	if m != nil {
		return m.Ressources
	}
	return nil
}

// Edit function
type EditPermissionRequest struct {
	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource" json:"ressource,omitempty"`
}

func (m *EditPermissionRequest) Reset()                    { *m = EditPermissionRequest{} }
func (m *EditPermissionRequest) String() string            { return proto.CompactTextString(m) }
func (*EditPermissionRequest) ProtoMessage()               {}
func (*EditPermissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EditPermissionRequest) GetRessource() *Ressource {
	if m != nil {
		return m.Ressource
	}
	return nil
}

// Revoke function
type RevokeRequest struct {
	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource" json:"ressource,omitempty"`
}

func (m *RevokeRequest) Reset()                    { *m = RevokeRequest{} }
func (m *RevokeRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokeRequest) ProtoMessage()               {}
func (*RevokeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RevokeRequest) GetRessource() *Ressource {
	if m != nil {
		return m.Ressource
	}
	return nil
}

// TransferOwnership function
type TransferOwnershipRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Team         string `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	ResourceId   string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *TransferOwnershipRequest) Reset()                    { *m = TransferOwnershipRequest{} }
func (m *TransferOwnershipRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferOwnershipRequest) ProtoMessage()               {}
func (*TransferOwnershipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *TransferOwnershipRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *TransferOwnershipRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *TransferOwnershipRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func init() {
	proto.RegisterType((*Ressource)(nil), "account.Ressource")
	proto.RegisterType((*GrantRequest)(nil), "account.GrantRequest")
	proto.RegisterType((*ListPermissionRequest)(nil), "account.ListPermissionRequest")
	proto.RegisterType((*ListPermissionReply)(nil), "account.ListPermissionReply")
	proto.RegisterType((*EditPermissionRequest)(nil), "account.EditPermissionRequest")
	proto.RegisterType((*RevokeRequest)(nil), "account.RevokeRequest")
	proto.RegisterType((*TransferOwnershipRequest)(nil), "account.TransferOwnershipRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PermissionService service

type PermissionServiceClient interface {
	Grant(ctx context.Context, in *GrantRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	List(ctx context.Context, in *ListPermissionRequest, opts ...grpc.CallOption) (*ListPermissionReply, error)
	Edit(ctx context.Context, in *EditPermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Revoke(ctx context.Context, in *RevokeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	TransferOwnership(ctx context.Context, in *TransferOwnershipRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type permissionServiceClient struct {
	cc *grpc.ClientConn
}

func NewPermissionServiceClient(cc *grpc.ClientConn) PermissionServiceClient {
	return &permissionServiceClient{cc}
}

func (c *permissionServiceClient) Grant(ctx context.Context, in *GrantRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.PermissionService/Grant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) List(ctx context.Context, in *ListPermissionRequest, opts ...grpc.CallOption) (*ListPermissionReply, error) {
	out := new(ListPermissionReply)
	err := grpc.Invoke(ctx, "/account.PermissionService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) Edit(ctx context.Context, in *EditPermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.PermissionService/Edit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) Revoke(ctx context.Context, in *RevokeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.PermissionService/Revoke", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) TransferOwnership(ctx context.Context, in *TransferOwnershipRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.PermissionService/TransferOwnership", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PermissionService service

type PermissionServiceServer interface {
	Grant(context.Context, *GrantRequest) (*google_protobuf1.Empty, error)
	List(context.Context, *ListPermissionRequest) (*ListPermissionReply, error)
	Edit(context.Context, *EditPermissionRequest) (*google_protobuf1.Empty, error)
	Revoke(context.Context, *RevokeRequest) (*google_protobuf1.Empty, error)
	TransferOwnership(context.Context, *TransferOwnershipRequest) (*google_protobuf1.Empty, error)
}

func RegisterPermissionServiceServer(s *grpc.Server, srv PermissionServiceServer) {
	s.RegisterService(&_PermissionService_serviceDesc, srv)
}

func _PermissionService_Grant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Grant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.PermissionService/Grant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Grant(ctx, req.(*GrantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.PermissionService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).List(ctx, req.(*ListPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.PermissionService/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Edit(ctx, req.(*EditPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_Revoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Revoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.PermissionService/Revoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Revoke(ctx, req.(*RevokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_TransferOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).TransferOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.PermissionService/TransferOwnership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).TransferOwnership(ctx, req.(*TransferOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PermissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.PermissionService",
	HandlerType: (*PermissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Grant",
			Handler:    _PermissionService_Grant_Handler,
		},
		{
			MethodName: "List",
			Handler:    _PermissionService_List_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _PermissionService_Edit_Handler,
		},
		{
			MethodName: "Revoke",
			Handler:    _PermissionService_Revoke_Handler,
		},
		{
			MethodName: "TransferOwnership",
			Handler:    _PermissionService_TransferOwnership_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/account/permission.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/account/permission.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x93, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x95, 0xb5, 0x2b, 0xea, 0xbb, 0x71, 0x98, 0xa1, 0x53, 0x14, 0x26, 0x18, 0x39, 0xa1,
	0x1d, 0x12, 0xd6, 0x9d, 0x40, 0x20, 0x01, 0x52, 0x05, 0x45, 0x48, 0x4c, 0x81, 0x2b, 0x9a, 0xdc,
	0xf4, 0x5d, 0x6b, 0x91, 0xc4, 0xc6, 0x76, 0x8a, 0x3a, 0x54, 0x21, 0x71, 0x00, 0xee, 0x5c, 0xb8,
	0x71, 0xe5, 0xfb, 0xf0, 0x15, 0xf8, 0x20, 0x28, 0x4e, 0x9b, 0x79, 0xa5, 0x91, 0xf8, 0xbb, 0x5b,
	0xec, 0xc7, 0x79, 0xfd, 0x7b, 0x1f, 0x3f, 0x2f, 0xdc, 0x19, 0x31, 0x3d, 0xce, 0x07, 0x41, 0xcc,
	0xd3, 0x90, 0x0a, 0x11, 0x63, 0x82, 0x92, 0x6a, 0x2e, 0x43, 0x9a, 0x8a, 0x90, 0x0a, 0x16, 0x4a,
	0x11, 0x87, 0x34, 0x8e, 0x79, 0x9e, 0xe9, 0x50, 0xa0, 0x4c, 0x99, 0x52, 0x8c, 0x67, 0x81, 0x90,
	0x5c, 0x73, 0x72, 0x61, 0xae, 0x78, 0x3b, 0x23, 0xce, 0x47, 0x09, 0x9a, 0x3f, 0x68, 0x96, 0x71,
	0x4d, 0x35, 0xe3, 0x99, 0x2a, 0x8f, 0x79, 0x57, 0xe6, 0xaa, 0x59, 0x0d, 0xf2, 0xe3, 0x10, 0x53,
	0xa1, 0xa7, 0xa5, 0xe8, 0x9f, 0x40, 0x3b, 0x42, 0xa5, 0x78, 0x2e, 0x63, 0x24, 0x3e, 0x6c, 0x72,
	0x39, 0xa2, 0x19, 0x3b, 0x31, 0x05, 0x5c, 0x67, 0xd7, 0xb9, 0xd1, 0x8e, 0xce, 0xec, 0x11, 0x02,
	0x4d, 0x8d, 0x34, 0x75, 0xd7, 0x8c, 0x66, 0xbe, 0xc9, 0x65, 0x58, 0x4f, 0x70, 0x82, 0x89, 0xdb,
	0x30, 0x9b, 0xe5, 0x82, 0x5c, 0x83, 0x0d, 0x89, 0x65, 0xe5, 0x23, 0x36, 0x74, 0x9b, 0x46, 0x83,
	0xc5, 0x56, 0x7f, 0xe8, 0xdf, 0x83, 0xcd, 0x87, 0x92, 0x66, 0x3a, 0xc2, 0x57, 0x39, 0x2a, 0x4d,
	0x6e, 0x42, 0x5b, 0x2e, 0x58, 0xcc, 0xdd, 0x1b, 0x5d, 0x12, 0xcc, 0x7b, 0x0c, 0x2a, 0xca, 0xe8,
	0xf4, 0x90, 0xff, 0xde, 0x81, 0xce, 0x13, 0xa6, 0xf4, 0x61, 0x65, 0xcd, 0xa2, 0xd6, 0x39, 0xb7,
	0xd2, 0x87, 0x4b, 0xcb, 0x1c, 0x22, 0x99, 0x92, 0x2e, 0x40, 0x05, 0xab, 0x5c, 0x67, 0xb7, 0x51,
	0xd3, 0x92, 0x75, 0xca, 0xef, 0x43, 0xa7, 0x37, 0x64, 0x2b, 0x5a, 0xfa, 0x7d, 0x7b, 0xee, 0xc3,
	0xc5, 0x08, 0x27, 0xfc, 0x25, 0xfe, 0x79, 0x09, 0x05, 0xee, 0x73, 0x49, 0x33, 0x75, 0x8c, 0xf2,
	0xe9, 0xeb, 0x0c, 0xa5, 0x1a, 0x33, 0xf1, 0xb7, 0x1e, 0x2f, 0xb9, 0xd9, 0x58, 0x76, 0xb3, 0xfb,
	0xa1, 0x05, 0x5b, 0xa7, 0xfd, 0x3f, 0x43, 0x39, 0x61, 0x31, 0x92, 0x8f, 0x0e, 0xac, 0x9b, 0xbc,
	0x90, 0x4e, 0xc5, 0x6c, 0xe7, 0xc7, 0xdb, 0x0e, 0xca, 0xa4, 0x07, 0x8b, 0xa4, 0x07, 0xbd, 0x22,
	0xe9, 0xfe, 0xe1, 0xbb, 0x6f, 0xdf, 0x3f, 0xad, 0x3d, 0xf6, 0x7b, 0xe1, 0x64, 0xbf, 0x9a, 0xa6,
	0x37, 0x55, 0x8f, 0x81, 0x0d, 0x3c, 0x0b, 0x0b, 0x44, 0x5b, 0x2d, 0xd6, 0x33, 0x6b, 0xf8, 0x6e,
	0x3b, 0x7b, 0xe4, 0x2d, 0x34, 0x8b, 0xe7, 0x26, 0x57, 0x2b, 0x90, 0x95, 0x29, 0xf4, 0x76, 0x6a,
	0x75, 0x91, 0x4c, 0xfd, 0x5b, 0x86, 0xeb, 0x80, 0xec, 0x9f, 0xe1, 0x5a, 0x45, 0xb3, 0xcc, 0x40,
	0xbe, 0x3a, 0xd0, 0x2c, 0x52, 0x62, 0x11, 0xac, 0x0c, 0x4d, 0xad, 0x27, 0x63, 0x73, 0xf7, 0xc0,
	0x7b, 0xf1, 0x4f, 0x3c, 0xb1, 0x35, 0xeb, 0x69, 0x67, 0x85, 0x57, 0x5f, 0x1c, 0x68, 0x95, 0x29,
	0x24, 0xdb, 0x56, 0xd6, 0xac, 0x58, 0xd6, 0x42, 0xa2, 0x81, 0x3c, 0xda, 0xfb, 0xbf, 0x90, 0xe4,
	0xb3, 0x03, 0x5b, 0x3f, 0x85, 0x9c, 0x5c, 0xaf, 0x60, 0xeb, 0x06, 0xa0, 0x96, 0xfb, 0x91, 0xe1,
	0x7e, 0xe0, 0xdf, 0xfd, 0xc5, 0x87, 0xd5, 0xf3, 0x0b, 0x0c, 0xa1, 0x6d, 0xde, 0xa0, 0x65, 0x2a,
	0x1f, 0xfc, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xa6, 0x93, 0x57, 0x29, 0x06, 0x00, 0x00,
}
