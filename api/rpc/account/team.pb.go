// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/account/team.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/account/team.proto

It has these top-level messages:
	CreateRequest
	ListRequest
	ListReply
	EditRequest
	GetDetailsRequest
	GetDetailsReply
	DeleteRequest
	AddMembershipsRequest
	DeleteMembershipsRequest
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Create function
type CreateRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// List function
type ListRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type ListReply struct {
	TeamNames []string `protobuf:"bytes,2,rep,name=team_names,json=teamNames" json:"team_names,omitempty"`
}

func (m *ListReply) Reset()                    { *m = ListReply{} }
func (m *ListReply) String() string            { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()               {}
func (*ListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListReply) GetTeamNames() []string {
	if m != nil {
		return m.TeamNames
	}
	return nil
}

// Edit function
type EditRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *EditRequest) Reset()                    { *m = EditRequest{} }
func (m *EditRequest) String() string            { return proto.CompactTextString(m) }
func (*EditRequest) ProtoMessage()               {}
func (*EditRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EditRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *EditRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// GetDetails function
type GetDetailsRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetDetailsRequest) Reset()                    { *m = GetDetailsRequest{} }
func (m *GetDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDetailsRequest) ProtoMessage()               {}
func (*GetDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetDetailsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *GetDetailsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetDetailsReply struct {
	Organization string   `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Members      []string `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
}

func (m *GetDetailsReply) Reset()                    { *m = GetDetailsReply{} }
func (m *GetDetailsReply) String() string            { return proto.CompactTextString(m) }
func (*GetDetailsReply) ProtoMessage()               {}
func (*GetDetailsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetDetailsReply) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *GetDetailsReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetDetailsReply) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetDetailsReply) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// Delete function
type DeleteRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// AddMembership function
type AddMembershipsRequest struct {
	Organization string   `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Members      []string `protobuf:"bytes,3,rep,name=Members" json:"Members,omitempty"`
}

func (m *AddMembershipsRequest) Reset()                    { *m = AddMembershipsRequest{} }
func (m *AddMembershipsRequest) String() string            { return proto.CompactTextString(m) }
func (*AddMembershipsRequest) ProtoMessage()               {}
func (*AddMembershipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AddMembershipsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *AddMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// DeleteMembership function
type DeleteMembershipsRequest struct {
	Organization string   `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Members      []string `protobuf:"bytes,3,rep,name=Members" json:"Members,omitempty"`
}

func (m *DeleteMembershipsRequest) Reset()                    { *m = DeleteMembershipsRequest{} }
func (m *DeleteMembershipsRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteMembershipsRequest) ProtoMessage()               {}
func (*DeleteMembershipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteMembershipsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DeleteMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "account.CreateRequest")
	proto.RegisterType((*ListRequest)(nil), "account.ListRequest")
	proto.RegisterType((*ListReply)(nil), "account.ListReply")
	proto.RegisterType((*EditRequest)(nil), "account.EditRequest")
	proto.RegisterType((*GetDetailsRequest)(nil), "account.GetDetailsRequest")
	proto.RegisterType((*GetDetailsReply)(nil), "account.GetDetailsReply")
	proto.RegisterType((*DeleteRequest)(nil), "account.DeleteRequest")
	proto.RegisterType((*AddMembershipsRequest)(nil), "account.AddMembershipsRequest")
	proto.RegisterType((*DeleteMembershipsRequest)(nil), "account.DeleteMembershipsRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TeamService service

type TeamServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error)
	Edit(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetDetails(ctx context.Context, in *GetDetailsRequest, opts ...grpc.CallOption) (*GetDetailsReply, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	AddMemberships(ctx context.Context, in *AddMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	DeleteMemberships(ctx context.Context, in *DeleteMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type teamServiceClient struct {
	cc *grpc.ClientConn
}

func NewTeamServiceClient(cc *grpc.ClientConn) TeamServiceClient {
	return &teamServiceClient{cc}
}

func (c *teamServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.TeamService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := grpc.Invoke(ctx, "/account.TeamService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Edit(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.TeamService/Edit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) GetDetails(ctx context.Context, in *GetDetailsRequest, opts ...grpc.CallOption) (*GetDetailsReply, error) {
	out := new(GetDetailsReply)
	err := grpc.Invoke(ctx, "/account.TeamService/GetDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.TeamService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) AddMemberships(ctx context.Context, in *AddMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.TeamService/AddMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) DeleteMemberships(ctx context.Context, in *DeleteMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.TeamService/DeleteMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TeamService service

type TeamServiceServer interface {
	Create(context.Context, *CreateRequest) (*google_protobuf1.Empty, error)
	List(context.Context, *ListRequest) (*ListReply, error)
	Edit(context.Context, *EditRequest) (*google_protobuf1.Empty, error)
	GetDetails(context.Context, *GetDetailsRequest) (*GetDetailsReply, error)
	Delete(context.Context, *DeleteRequest) (*google_protobuf1.Empty, error)
	AddMemberships(context.Context, *AddMembershipsRequest) (*google_protobuf1.Empty, error)
	DeleteMemberships(context.Context, *DeleteMembershipsRequest) (*google_protobuf1.Empty, error)
}

func RegisterTeamServiceServer(s *grpc.Server, srv TeamServiceServer) {
	s.RegisterService(&_TeamService_serviceDesc, srv)
}

func _TeamService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.TeamService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.TeamService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.TeamService/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).Edit(ctx, req.(*EditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_GetDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).GetDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.TeamService/GetDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).GetDetails(ctx, req.(*GetDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.TeamService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_AddMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).AddMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.TeamService/AddMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).AddMemberships(ctx, req.(*AddMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_DeleteMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).DeleteMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.TeamService/DeleteMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).DeleteMemberships(ctx, req.(*DeleteMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TeamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.TeamService",
	HandlerType: (*TeamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TeamService_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _TeamService_List_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _TeamService_Edit_Handler,
		},
		{
			MethodName: "GetDetails",
			Handler:    _TeamService_GetDetails_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TeamService_Delete_Handler,
		},
		{
			MethodName: "AddMemberships",
			Handler:    _TeamService_AddMemberships_Handler,
		},
		{
			MethodName: "DeleteMemberships",
			Handler:    _TeamService_DeleteMemberships_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/account/team.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/account/team.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x93, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0xc7, 0xd9, 0x24, 0xa4, 0xe4, 0xc4, 0x2a, 0x1d, 0xb4, 0x2c, 0xeb, 0x57, 0x3a, 0x17, 0x1a,
	0x22, 0xec, 0x90, 0x16, 0x0a, 0x8a, 0x37, 0x62, 0x4b, 0x2f, 0xfc, 0xb8, 0x88, 0xde, 0x78, 0x25,
	0x93, 0xcd, 0x71, 0x33, 0xb8, 0xbb, 0x33, 0xce, 0x4e, 0x0a, 0xb1, 0xf4, 0x46, 0x50, 0xf0, 0xda,
	0x27, 0xf1, 0x59, 0x7c, 0x05, 0x1f, 0x44, 0x66, 0x76, 0x1b, 0x37, 0xfd, 0xa0, 0x09, 0xa1, 0xbd,
	0xcb, 0x9c, 0xb3, 0x73, 0x7e, 0xff, 0xff, 0xe4, 0xfc, 0x61, 0x37, 0x16, 0x66, 0x3c, 0x19, 0x86,
	0x91, 0x4c, 0x19, 0x57, 0x2a, 0xc2, 0x04, 0x35, 0x37, 0x52, 0x33, 0x9e, 0x2a, 0xc6, 0x95, 0x60,
	0x5a, 0x45, 0x8c, 0x47, 0x91, 0x9c, 0x64, 0x86, 0x19, 0xe4, 0x69, 0xa8, 0xb4, 0x34, 0x92, 0xac,
	0x95, 0xb5, 0xe0, 0x5e, 0x2c, 0x65, 0x9c, 0xa0, 0xfb, 0x96, 0x67, 0x99, 0x34, 0xdc, 0x08, 0x99,
	0xe5, 0xc5, 0x67, 0xc1, 0xdd, 0xb2, 0xeb, 0x4e, 0xc3, 0xc9, 0x27, 0x86, 0xa9, 0x32, 0xd3, 0xa2,
	0x49, 0x05, 0xac, 0xbf, 0xd4, 0xc8, 0x0d, 0x0e, 0xf0, 0xcb, 0x04, 0x73, 0x43, 0x28, 0xdc, 0x90,
	0x3a, 0xe6, 0x99, 0xf8, 0xea, 0x86, 0xf8, 0x5e, 0xc7, 0xeb, 0xb6, 0x06, 0x73, 0x35, 0x42, 0xa0,
	0x91, 0xf1, 0x14, 0xfd, 0x9a, 0xeb, 0xb9, 0xdf, 0xa4, 0x03, 0xed, 0x11, 0xe6, 0x91, 0x16, 0xca,
	0x5d, 0xab, 0xbb, 0x56, 0xb5, 0x44, 0xfb, 0xd0, 0x7e, 0x2d, 0x72, 0xb3, 0x04, 0x88, 0xf6, 0xa0,
	0x55, 0x5c, 0x51, 0xc9, 0x94, 0xdc, 0x07, 0xb0, 0xe6, 0x3f, 0x5a, 0x5c, 0xee, 0xd7, 0x3a, 0xf5,
	0x6e, 0x6b, 0xd0, 0xb2, 0x95, 0xb7, 0xb6, 0x40, 0x63, 0x68, 0xef, 0x8f, 0x84, 0xb9, 0x7a, 0x1f,
	0xaf, 0x60, 0xe3, 0x00, 0xcd, 0x1e, 0x1a, 0x2e, 0x92, 0x7c, 0x45, 0x1c, 0xfd, 0xee, 0xc1, 0xad,
	0xea, 0x34, 0x6b, 0xf4, 0xca, 0xa4, 0x13, 0x1f, 0xd6, 0x52, 0x4c, 0x87, 0xa8, 0x73, 0xbf, 0xe1,
	0xde, 0xef, 0xe4, 0x48, 0x0f, 0x60, 0x7d, 0x0f, 0x13, 0x5c, 0x79, 0x0f, 0xa8, 0x80, 0x3b, 0x2f,
	0x46, 0xa3, 0x37, 0xc5, 0xd8, 0xb1, 0x50, 0xab, 0xbe, 0x90, 0xd5, 0x5c, 0x4e, 0xf3, 0xeb, 0x85,
	0xe6, 0xf2, 0x48, 0x13, 0xf0, 0x0b, 0xcd, 0xd7, 0x41, 0xdb, 0xfe, 0xdd, 0x84, 0xf6, 0x7b, 0xe4,
	0xe9, 0x3b, 0xd4, 0x87, 0x22, 0x42, 0xf2, 0x19, 0x9a, 0x45, 0x72, 0xc8, 0x66, 0x58, 0x06, 0x31,
	0x9c, 0x8b, 0x52, 0xb0, 0x19, 0x16, 0xc9, 0x0b, 0x4f, 0x92, 0x17, 0xee, 0xdb, 0xe4, 0xd1, 0xfe,
	0xb7, 0x3f, 0x7f, 0x7f, 0xd5, 0x9e, 0xd0, 0x47, 0xec, 0xb0, 0x3f, 0xcb, 0xf5, 0x51, 0x55, 0xda,
	0xb1, 0x8b, 0x39, 0x3b, 0xb2, 0x92, 0x8e, 0x9f, 0x79, 0x3d, 0xf2, 0x01, 0x1a, 0x36, 0x08, 0xe4,
	0xf6, 0x0c, 0x55, 0x89, 0x52, 0x40, 0x4e, 0x55, 0x55, 0x32, 0xa5, 0x8f, 0x1d, 0x64, 0x8b, 0x3c,
	0xbc, 0x04, 0x42, 0x62, 0x68, 0xd8, 0xdc, 0x54, 0x46, 0x57, 0x62, 0x74, 0x99, 0x87, 0x60, 0x09,
	0x0f, 0x1a, 0xe0, 0xff, 0xa6, 0x93, 0x60, 0x86, 0x3b, 0x13, 0xa6, 0xc0, 0x3f, 0xb7, 0x67, 0x5d,
	0x85, 0x0e, 0xdb, 0x25, 0x0b, 0x62, 0xc9, 0x18, 0x9a, 0xc5, 0x8a, 0x54, 0xfe, 0xa4, 0xb9, 0x3d,
	0xbf, 0xd0, 0x60, 0x49, 0xea, 0x2d, 0x4a, 0xfa, 0xe1, 0xc1, 0xcd, 0xf9, 0xc5, 0x27, 0x0f, 0x66,
	0xc8, 0x73, 0x13, 0x71, 0x21, 0xfa, 0xb9, 0x43, 0xef, 0x6e, 0xf7, 0x17, 0x43, 0xb3, 0x74, 0x36,
	0xda, 0x3e, 0xf3, 0x4f, 0x0f, 0x36, 0xce, 0xc4, 0x82, 0x6c, 0x9d, 0xb2, 0xbf, 0x84, 0x9c, 0xa7,
	0x4e, 0xce, 0x4e, 0x6f, 0x79, 0x39, 0xc3, 0xa6, 0x1b, 0xb5, 0xf3, 0x2f, 0x00, 0x00, 0xff, 0xff,
	0x78, 0x01, 0xb1, 0xed, 0xe2, 0x06, 0x00, 0x00,
}
