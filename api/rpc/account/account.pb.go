// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/account/account.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/account/account.proto

It has these top-level messages:
	Account
	Billing
	Settings
	SignUpRequest
	SignUpReply
	VerificationRequest
	PasswordResetRequest
	PasswordChangeRequest
	LogInRequest
	LogInReply
	ListAccountRequest
	ListAccountReply
	SwitchRequest
	GetAccountDetailsRequest
	GetAccountDetailsReply
	EditAccountRequest
	DeleteAccountRequest
	GetTeamsRequest
	Team
	GetTeamsReply
	AddOrganizationMembershipsRequest
	DeleteOrganizationMembershipsRequest
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email         string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	EmailVerified bool   `protobuf:"varint,3,opt,name=email_verified,json=emailVerified" json:"email_verified,omitempty"`
	AccountType   string `protobuf:"bytes,4,opt,name=account_type,json=accountType" json:"account_type,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *Account) GetAccountType() string {
	if m != nil {
		return m.AccountType
	}
	return ""
}

type Billing struct {
	Contact       string `protobuf:"bytes,1,opt,name=contact" json:"contact,omitempty"`
	AddressLine_1 string `protobuf:"bytes,2,opt,name=address_line_1,json=addressLine1" json:"address_line_1,omitempty"`
	AddressLine_2 string `protobuf:"bytes,3,opt,name=address_line_2,json=addressLine2" json:"address_line_2,omitempty"`
	City          string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	State         string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	ZipCode       string `protobuf:"bytes,6,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	PhoneNumber   string `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	FaxNumber     string `protobuf:"bytes,8,opt,name=fax_number,json=faxNumber" json:"fax_number,omitempty"`
	Email         string `protobuf:"bytes,9,opt,name=email" json:"email,omitempty"`
	CardType      string `protobuf:"bytes,10,opt,name=card_type,json=cardType" json:"card_type,omitempty"`
	CardNumber    string `protobuf:"bytes,11,opt,name=card_number,json=cardNumber" json:"card_number,omitempty"`
}

func (m *Billing) Reset()                    { *m = Billing{} }
func (m *Billing) String() string            { return proto.CompactTextString(m) }
func (*Billing) ProtoMessage()               {}
func (*Billing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Billing) GetContact() string {
	if m != nil {
		return m.Contact
	}
	return ""
}

func (m *Billing) GetAddressLine_1() string {
	if m != nil {
		return m.AddressLine_1
	}
	return ""
}

func (m *Billing) GetAddressLine_2() string {
	if m != nil {
		return m.AddressLine_2
	}
	return ""
}

func (m *Billing) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Billing) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Billing) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *Billing) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Billing) GetFaxNumber() string {
	if m != nil {
		return m.FaxNumber
	}
	return ""
}

func (m *Billing) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Billing) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Billing) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

type Settings struct {
	Param map[string]string `protobuf:"bytes,2,rep,name=param" json:"param,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Settings) Reset()                    { *m = Settings{} }
func (m *Settings) String() string            { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()               {}
func (*Settings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Settings) GetParam() map[string]string {
	if m != nil {
		return m.Param
	}
	return nil
}

// SignUp function
type SignUpRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	AccountType string `protobuf:"bytes,4,opt,name=account_type,json=accountType" json:"account_type,omitempty"`
}

func (m *SignUpRequest) Reset()                    { *m = SignUpRequest{} }
func (m *SignUpRequest) String() string            { return proto.CompactTextString(m) }
func (*SignUpRequest) ProtoMessage()               {}
func (*SignUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SignUpRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SignUpRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SignUpRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignUpRequest) GetAccountType() string {
	if m != nil {
		return m.AccountType
	}
	return ""
}

type SignUpReply struct {
	SessionKey string `protobuf:"bytes,1,opt,name=sessionKey" json:"sessionKey,omitempty"`
}

func (m *SignUpReply) Reset()                    { *m = SignUpReply{} }
func (m *SignUpReply) String() string            { return proto.CompactTextString(m) }
func (*SignUpReply) ProtoMessage()               {}
func (*SignUpReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SignUpReply) GetSessionKey() string {
	if m != nil {
		return m.SessionKey
	}
	return ""
}

// Verify function
type VerificationRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *VerificationRequest) Reset()                    { *m = VerificationRequest{} }
func (m *VerificationRequest) String() string            { return proto.CompactTextString(m) }
func (*VerificationRequest) ProtoMessage()               {}
func (*VerificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *VerificationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VerificationRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *VerificationRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// PasswordReset function
type PasswordResetRequest struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *PasswordResetRequest) Reset()                    { *m = PasswordResetRequest{} }
func (m *PasswordResetRequest) String() string            { return proto.CompactTextString(m) }
func (*PasswordResetRequest) ProtoMessage()               {}
func (*PasswordResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PasswordResetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PasswordResetRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// PasswordChange function
type PasswordChangeRequest struct {
	Name             string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ExistingPassword string `protobuf:"bytes,2,opt,name=existingPassword" json:"existingPassword,omitempty"`
	NewPassword      string `protobuf:"bytes,3,opt,name=newPassword" json:"newPassword,omitempty"`
}

func (m *PasswordChangeRequest) Reset()                    { *m = PasswordChangeRequest{} }
func (m *PasswordChangeRequest) String() string            { return proto.CompactTextString(m) }
func (*PasswordChangeRequest) ProtoMessage()               {}
func (*PasswordChangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PasswordChangeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PasswordChangeRequest) GetExistingPassword() string {
	if m != nil {
		return m.ExistingPassword
	}
	return ""
}

func (m *PasswordChangeRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

// LogIn function
type LogInRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LogInRequest) Reset()                    { *m = LogInRequest{} }
func (m *LogInRequest) String() string            { return proto.CompactTextString(m) }
func (*LogInRequest) ProtoMessage()               {}
func (*LogInRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *LogInRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogInRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LogInReply struct {
	SessionKey string `protobuf:"bytes,1,opt,name=sessionKey" json:"sessionKey,omitempty"`
}

func (m *LogInReply) Reset()                    { *m = LogInReply{} }
func (m *LogInReply) String() string            { return proto.CompactTextString(m) }
func (*LogInReply) ProtoMessage()               {}
func (*LogInReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *LogInReply) GetSessionKey() string {
	if m != nil {
		return m.SessionKey
	}
	return ""
}

// List function
type ListAccountRequest struct {
}

func (m *ListAccountRequest) Reset()                    { *m = ListAccountRequest{} }
func (m *ListAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAccountRequest) ProtoMessage()               {}
func (*ListAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ListAccountReply struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *ListAccountReply) Reset()                    { *m = ListAccountReply{} }
func (m *ListAccountReply) String() string            { return proto.CompactTextString(m) }
func (*ListAccountReply) ProtoMessage()               {}
func (*ListAccountReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ListAccountReply) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// Switch function
type SwitchRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *SwitchRequest) Reset()                    { *m = SwitchRequest{} }
func (m *SwitchRequest) String() string            { return proto.CompactTextString(m) }
func (*SwitchRequest) ProtoMessage()               {}
func (*SwitchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SwitchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// GetDetails function
type GetAccountDetailsRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetAccountDetailsRequest) Reset()                    { *m = GetAccountDetailsRequest{} }
func (m *GetAccountDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountDetailsRequest) ProtoMessage()               {}
func (*GetAccountDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetAccountDetailsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetAccountDetailsReply struct {
	Account  *Account  `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Billing  *Billing  `protobuf:"bytes,2,opt,name=billing" json:"billing,omitempty"`
	Settings *Settings `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
}

func (m *GetAccountDetailsReply) Reset()                    { *m = GetAccountDetailsReply{} }
func (m *GetAccountDetailsReply) String() string            { return proto.CompactTextString(m) }
func (*GetAccountDetailsReply) ProtoMessage()               {}
func (*GetAccountDetailsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GetAccountDetailsReply) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *GetAccountDetailsReply) GetBilling() *Billing {
	if m != nil {
		return m.Billing
	}
	return nil
}

func (m *GetAccountDetailsReply) GetSettings() *Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// Edit function
type EditAccountRequest struct {
	Name     string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email    string    `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Billing  *Billing  `protobuf:"bytes,3,opt,name=billing" json:"billing,omitempty"`
	Settings *Settings `protobuf:"bytes,4,opt,name=settings" json:"settings,omitempty"`
}

func (m *EditAccountRequest) Reset()                    { *m = EditAccountRequest{} }
func (m *EditAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*EditAccountRequest) ProtoMessage()               {}
func (*EditAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *EditAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *EditAccountRequest) GetBilling() *Billing {
	if m != nil {
		return m.Billing
	}
	return nil
}

func (m *EditAccountRequest) GetSettings() *Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// Delete function
type DeleteAccountRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteAccountRequest) Reset()                    { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()               {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *DeleteAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// GetTeams function
type GetTeamsRequest struct {
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetTeamsRequest) Reset()                    { *m = GetTeamsRequest{} }
func (m *GetTeamsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTeamsRequest) ProtoMessage()               {}
func (*GetTeamsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *GetTeamsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Team struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Organization string `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (m *Team) Reset()                    { *m = Team{} }
func (m *Team) String() string            { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()               {}
func (*Team) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type GetTeamsReply struct {
	Teams []*Team `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
}

func (m *GetTeamsReply) Reset()                    { *m = GetTeamsReply{} }
func (m *GetTeamsReply) String() string            { return proto.CompactTextString(m) }
func (*GetTeamsReply) ProtoMessage()               {}
func (*GetTeamsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetTeamsReply) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

// AddOrganizationMemberships
type AddOrganizationMembershipsRequest struct {
	Name    string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Members []string `protobuf:"bytes,2,rep,name=Members" json:"Members,omitempty"`
}

func (m *AddOrganizationMembershipsRequest) Reset()         { *m = AddOrganizationMembershipsRequest{} }
func (m *AddOrganizationMembershipsRequest) String() string { return proto.CompactTextString(m) }
func (*AddOrganizationMembershipsRequest) ProtoMessage()    {}
func (*AddOrganizationMembershipsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20}
}

func (m *AddOrganizationMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddOrganizationMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// DeleteOrganizationMemberships
type DeleteOrganizationMembershipsRequest struct {
	Name    string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Members []string `protobuf:"bytes,2,rep,name=Members" json:"Members,omitempty"`
}

func (m *DeleteOrganizationMembershipsRequest) Reset()         { *m = DeleteOrganizationMembershipsRequest{} }
func (m *DeleteOrganizationMembershipsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOrganizationMembershipsRequest) ProtoMessage()    {}
func (*DeleteOrganizationMembershipsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{21}
}

func (m *DeleteOrganizationMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteOrganizationMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*Account)(nil), "account.Account")
	proto.RegisterType((*Billing)(nil), "account.Billing")
	proto.RegisterType((*Settings)(nil), "account.Settings")
	proto.RegisterType((*SignUpRequest)(nil), "account.SignUpRequest")
	proto.RegisterType((*SignUpReply)(nil), "account.SignUpReply")
	proto.RegisterType((*VerificationRequest)(nil), "account.VerificationRequest")
	proto.RegisterType((*PasswordResetRequest)(nil), "account.PasswordResetRequest")
	proto.RegisterType((*PasswordChangeRequest)(nil), "account.PasswordChangeRequest")
	proto.RegisterType((*LogInRequest)(nil), "account.LogInRequest")
	proto.RegisterType((*LogInReply)(nil), "account.LogInReply")
	proto.RegisterType((*ListAccountRequest)(nil), "account.ListAccountRequest")
	proto.RegisterType((*ListAccountReply)(nil), "account.ListAccountReply")
	proto.RegisterType((*SwitchRequest)(nil), "account.SwitchRequest")
	proto.RegisterType((*GetAccountDetailsRequest)(nil), "account.GetAccountDetailsRequest")
	proto.RegisterType((*GetAccountDetailsReply)(nil), "account.GetAccountDetailsReply")
	proto.RegisterType((*EditAccountRequest)(nil), "account.EditAccountRequest")
	proto.RegisterType((*DeleteAccountRequest)(nil), "account.DeleteAccountRequest")
	proto.RegisterType((*GetTeamsRequest)(nil), "account.GetTeamsRequest")
	proto.RegisterType((*Team)(nil), "account.Team")
	proto.RegisterType((*GetTeamsReply)(nil), "account.GetTeamsReply")
	proto.RegisterType((*AddOrganizationMembershipsRequest)(nil), "account.AddOrganizationMembershipsRequest")
	proto.RegisterType((*DeleteOrganizationMembershipsRequest)(nil), "account.DeleteOrganizationMembershipsRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountService service

type AccountServiceClient interface {
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpReply, error)
	Verify(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	PasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	PasswordChange(ctx context.Context, in *PasswordChangeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Login(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*LogInReply, error)
	List(ctx context.Context, in *ListAccountRequest, opts ...grpc.CallOption) (*ListAccountReply, error)
	Switch(ctx context.Context, in *SwitchRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetDetails(ctx context.Context, in *GetAccountDetailsRequest, opts ...grpc.CallOption) (*GetAccountDetailsReply, error)
	Edit(ctx context.Context, in *EditAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetTeams(ctx context.Context, in *GetTeamsRequest, opts ...grpc.CallOption) (*GetTeamsReply, error)
	AddOrganizationMemberships(ctx context.Context, in *AddOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	DeleteOrganizationMemberships(ctx context.Context, in *DeleteOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpReply, error) {
	out := new(SignUpReply)
	err := grpc.Invoke(ctx, "/account.AccountService/SignUp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Verify(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/Verify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) PasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/PasswordReset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) PasswordChange(ctx context.Context, in *PasswordChangeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/PasswordChange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Login(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*LogInReply, error) {
	out := new(LogInReply)
	err := grpc.Invoke(ctx, "/account.AccountService/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) List(ctx context.Context, in *ListAccountRequest, opts ...grpc.CallOption) (*ListAccountReply, error) {
	out := new(ListAccountReply)
	err := grpc.Invoke(ctx, "/account.AccountService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Switch(ctx context.Context, in *SwitchRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/Switch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetDetails(ctx context.Context, in *GetAccountDetailsRequest, opts ...grpc.CallOption) (*GetAccountDetailsReply, error) {
	out := new(GetAccountDetailsReply)
	err := grpc.Invoke(ctx, "/account.AccountService/GetDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Edit(ctx context.Context, in *EditAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/Edit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetTeams(ctx context.Context, in *GetTeamsRequest, opts ...grpc.CallOption) (*GetTeamsReply, error) {
	out := new(GetTeamsReply)
	err := grpc.Invoke(ctx, "/account.AccountService/GetTeams", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) AddOrganizationMemberships(ctx context.Context, in *AddOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/AddOrganizationMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteOrganizationMemberships(ctx context.Context, in *DeleteOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/DeleteOrganizationMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceServer interface {
	SignUp(context.Context, *SignUpRequest) (*SignUpReply, error)
	Verify(context.Context, *VerificationRequest) (*google_protobuf1.Empty, error)
	PasswordReset(context.Context, *PasswordResetRequest) (*google_protobuf1.Empty, error)
	PasswordChange(context.Context, *PasswordChangeRequest) (*google_protobuf1.Empty, error)
	Login(context.Context, *LogInRequest) (*LogInReply, error)
	List(context.Context, *ListAccountRequest) (*ListAccountReply, error)
	Switch(context.Context, *SwitchRequest) (*google_protobuf1.Empty, error)
	GetDetails(context.Context, *GetAccountDetailsRequest) (*GetAccountDetailsReply, error)
	Edit(context.Context, *EditAccountRequest) (*google_protobuf1.Empty, error)
	Delete(context.Context, *DeleteAccountRequest) (*google_protobuf1.Empty, error)
	GetTeams(context.Context, *GetTeamsRequest) (*GetTeamsReply, error)
	AddOrganizationMemberships(context.Context, *AddOrganizationMembershipsRequest) (*google_protobuf1.Empty, error)
	DeleteOrganizationMemberships(context.Context, *DeleteOrganizationMembershipsRequest) (*google_protobuf1.Empty, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Verify(ctx, req.(*VerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_PasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).PasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/PasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).PasswordReset(ctx, req.(*PasswordResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_PasswordChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).PasswordChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/PasswordChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).PasswordChange(ctx, req.(*PasswordChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Login(ctx, req.(*LogInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).List(ctx, req.(*ListAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Switch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Switch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Switch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Switch(ctx, req.(*SwitchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetDetails(ctx, req.(*GetAccountDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Edit(ctx, req.(*EditAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Delete(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetTeams(ctx, req.(*GetTeamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_AddOrganizationMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrganizationMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).AddOrganizationMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/AddOrganizationMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).AddOrganizationMemberships(ctx, req.(*AddOrganizationMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteOrganizationMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteOrganizationMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/DeleteOrganizationMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteOrganizationMemberships(ctx, req.(*DeleteOrganizationMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _AccountService_SignUp_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _AccountService_Verify_Handler,
		},
		{
			MethodName: "PasswordReset",
			Handler:    _AccountService_PasswordReset_Handler,
		},
		{
			MethodName: "PasswordChange",
			Handler:    _AccountService_PasswordChange_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _AccountService_Login_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AccountService_List_Handler,
		},
		{
			MethodName: "Switch",
			Handler:    _AccountService_Switch_Handler,
		},
		{
			MethodName: "GetDetails",
			Handler:    _AccountService_GetDetails_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _AccountService_Edit_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AccountService_Delete_Handler,
		},
		{
			MethodName: "GetTeams",
			Handler:    _AccountService_GetTeams_Handler,
		},
		{
			MethodName: "AddOrganizationMemberships",
			Handler:    _AccountService_AddOrganizationMemberships_Handler,
		},
		{
			MethodName: "DeleteOrganizationMemberships",
			Handler:    _AccountService_DeleteOrganizationMemberships_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/account/account.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/account/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x52, 0xdb, 0x46,
	0x14, 0x1e, 0xff, 0x60, 0xcc, 0x31, 0xa6, 0x74, 0xe3, 0x50, 0x45, 0x09, 0xc4, 0x2c, 0x90, 0x61,
	0x1c, 0xb0, 0x06, 0xb7, 0x9d, 0x49, 0x73, 0x91, 0x49, 0x9a, 0x30, 0x4c, 0xa7, 0xb4, 0xa5, 0x86,
	0x76, 0xfa, 0x37, 0xf1, 0x2c, 0xd2, 0x22, 0x76, 0x2a, 0x4b, 0x8a, 0xb4, 0x36, 0x98, 0x0c, 0x37,
	0x7d, 0x85, 0x5e, 0x74, 0xda, 0x5e, 0xf4, 0x7d, 0x7a, 0xdb, 0x57, 0xe8, 0x83, 0x74, 0x76, 0xb5,
	0x92, 0x65, 0x2c, 0x9b, 0xc0, 0xf4, 0xca, 0xda, 0xb3, 0xc7, 0xdf, 0xf7, 0x9d, 0xb3, 0x67, 0x3f,
	0x09, 0x3e, 0xb1, 0x19, 0x3f, 0xed, 0x1d, 0x37, 0x4d, 0xaf, 0x6b, 0x10, 0xdf, 0x37, 0xa9, 0x43,
	0x03, 0xc2, 0xbd, 0xc0, 0x20, 0x5d, 0xdf, 0x20, 0x3e, 0x33, 0x02, 0xdf, 0x34, 0x88, 0x69, 0x7a,
	0x3d, 0x97, 0xc7, 0xbf, 0x4d, 0x3f, 0xf0, 0xb8, 0x87, 0x66, 0xd5, 0x52, 0x7f, 0x60, 0x7b, 0x9e,
	0xed, 0x50, 0x99, 0x4e, 0x5c, 0xd7, 0xe3, 0x84, 0x33, 0xcf, 0x0d, 0xa3, 0x34, 0xfd, 0xbe, 0xda,
	0x95, 0xab, 0xe3, 0xde, 0x89, 0x41, 0xbb, 0x3e, 0x1f, 0x44, 0x9b, 0xf8, 0x12, 0x66, 0x5f, 0x44,
	0x28, 0x08, 0x41, 0xd1, 0x25, 0x5d, 0xaa, 0xe5, 0xea, 0xb9, 0xcd, 0xb9, 0xb6, 0x7c, 0x46, 0x35,
	0x98, 0xa1, 0x5d, 0xc2, 0x1c, 0x2d, 0x2f, 0x83, 0xd1, 0x02, 0x6d, 0xc0, 0x82, 0x7c, 0xe8, 0xf4,
	0x69, 0xc0, 0x4e, 0x18, 0xb5, 0xb4, 0x42, 0x3d, 0xb7, 0x59, 0x6e, 0x57, 0x65, 0xf4, 0x5b, 0x15,
	0x44, 0xab, 0x30, 0xaf, 0x14, 0x76, 0xf8, 0xc0, 0xa7, 0x5a, 0x51, 0x62, 0x54, 0x54, 0xec, 0x68,
	0xe0, 0x53, 0xfc, 0x77, 0x1e, 0x66, 0x3f, 0x65, 0x8e, 0xc3, 0x5c, 0x1b, 0x69, 0x30, 0x6b, 0x7a,
	0x2e, 0x27, 0x26, 0x57, 0x12, 0xe2, 0x25, 0x5a, 0x87, 0x05, 0x62, 0x59, 0x01, 0x0d, 0xc3, 0x8e,
	0xc3, 0x5c, 0xda, 0xd9, 0x51, 0x72, 0xe6, 0x55, 0x74, 0x9f, 0xb9, 0x74, 0x67, 0x2c, 0xab, 0x25,
	0x55, 0x8d, 0x66, 0xb5, 0x44, 0x95, 0x26, 0xe3, 0x03, 0x25, 0x46, 0x3e, 0x8b, 0x2a, 0x43, 0x4e,
	0x38, 0xd5, 0x66, 0xa2, 0x2a, 0xe5, 0x02, 0xdd, 0x83, 0xf2, 0x05, 0xf3, 0x3b, 0xa6, 0x67, 0x51,
	0xad, 0x14, 0x09, 0xba, 0x60, 0xfe, 0x4b, 0xcf, 0xa2, 0xa2, 0x32, 0xff, 0xd4, 0x73, 0x69, 0xc7,
	0xed, 0x75, 0x8f, 0x69, 0xa0, 0xcd, 0x46, 0x95, 0xc9, 0xd8, 0x97, 0x32, 0x84, 0x96, 0x01, 0x4e,
	0xc8, 0x79, 0x9c, 0x50, 0x96, 0x09, 0x73, 0x27, 0xe4, 0x5c, 0x6d, 0x27, 0x8d, 0x9d, 0x4b, 0x37,
	0xf6, 0x3e, 0xcc, 0x99, 0x24, 0xb0, 0xa2, 0x76, 0x81, 0xdc, 0x29, 0x8b, 0x80, 0xe8, 0x15, 0x7a,
	0x08, 0x15, 0xb9, 0xa9, 0x20, 0x2b, 0x72, 0x1b, 0x44, 0x28, 0xc2, 0xc4, 0xe7, 0x50, 0x3e, 0xa4,
	0x9c, 0x33, 0xd7, 0x0e, 0x51, 0x0b, 0x66, 0x7c, 0x12, 0x90, 0xae, 0x96, 0xaf, 0x17, 0x36, 0x2b,
	0xad, 0x07, 0xcd, 0x78, 0x74, 0xe2, 0x8c, 0xe6, 0x81, 0xd8, 0xde, 0x75, 0x79, 0x30, 0x68, 0x47,
	0xa9, 0xfa, 0x13, 0x80, 0x61, 0x10, 0x2d, 0x42, 0xe1, 0x67, 0x3a, 0x50, 0x47, 0x21, 0x1e, 0x85,
	0xe6, 0x3e, 0x71, 0x7a, 0x34, 0x1e, 0x06, 0xb9, 0x78, 0x9a, 0x7f, 0x92, 0xc3, 0xe7, 0x50, 0x3d,
	0x64, 0xb6, 0xfb, 0x8d, 0xdf, 0xa6, 0x6f, 0x7a, 0x34, 0xcc, 0x9e, 0x25, 0x1d, 0xca, 0x3e, 0x09,
	0xc3, 0x33, 0x2f, 0xb0, 0x14, 0x42, 0xb2, 0x1e, 0xb6, 0xa3, 0x90, 0x6e, 0xc7, 0x3b, 0x0c, 0xd0,
	0x36, 0x54, 0x62, 0x66, 0xdf, 0x19, 0xa0, 0x15, 0x80, 0x90, 0x86, 0x21, 0xf3, 0xdc, 0xcf, 0x13,
	0xed, 0xa9, 0x08, 0xfe, 0x1e, 0xee, 0x44, 0xe3, 0x69, 0xca, 0x2b, 0x72, 0x5b, 0xb9, 0x62, 0x88,
	0xc4, 0x58, 0x14, 0xd4, 0x10, 0x79, 0x16, 0xc5, 0xcf, 0xa1, 0x76, 0xa0, 0xf6, 0xdb, 0x34, 0xa4,
	0x7c, 0x1a, 0x76, 0xe6, 0xb5, 0xc2, 0x03, 0xb8, 0x1b, 0x23, 0xbc, 0x3c, 0x25, 0xae, 0x4d, 0xa7,
	0x41, 0x34, 0x60, 0x91, 0x9e, 0xb3, 0x50, 0x9c, 0xe5, 0xc1, 0xa8, 0xcc, 0xb1, 0x38, 0xaa, 0x43,
	0xc5, 0xa5, 0x67, 0x49, 0x5a, 0xa4, 0x3a, 0x1d, 0xc2, 0xcf, 0x60, 0x7e, 0xdf, 0xb3, 0x3f, 0xbb,
	0x6d, 0x43, 0xf0, 0x16, 0x80, 0xfa, 0xff, 0xbb, 0x9c, 0x42, 0x0d, 0xd0, 0x3e, 0x0b, 0xb9, 0x32,
	0x1e, 0xc5, 0x89, 0x9f, 0xc3, 0xe2, 0x48, 0x54, 0x20, 0x6d, 0x41, 0x59, 0x9d, 0x76, 0xa8, 0xe5,
	0xe4, 0x24, 0x2f, 0x26, 0x93, 0x1c, 0x27, 0x26, 0x19, 0x78, 0x0d, 0xaa, 0x87, 0x67, 0x8c, 0x9b,
	0xa7, 0x53, 0xca, 0xc0, 0x4d, 0xd0, 0xf6, 0x68, 0xcc, 0xf2, 0x8a, 0x72, 0xc2, 0x9c, 0x70, 0x5a,
	0xfe, 0x5f, 0x39, 0x58, 0xca, 0xf8, 0x83, 0x50, 0xd7, 0x80, 0xd8, 0x82, 0xe5, 0x3f, 0xb2, 0xc4,
	0xc5, 0x09, 0x22, 0xf7, 0x38, 0x32, 0x3a, 0xd9, 0xbc, 0x74, 0xae, 0x32, 0xc0, 0x76, 0x9c, 0x80,
	0xb6, 0xa1, 0x1c, 0xaa, 0x6b, 0x2a, 0x0f, 0xab, 0xd2, 0x7a, 0x7f, 0xec, 0xfe, 0xb6, 0x93, 0x14,
	0xfc, 0x7b, 0x0e, 0xd0, 0xae, 0xc5, 0xae, 0xf4, 0xf3, 0x06, 0x7e, 0x9e, 0xd2, 0x56, 0xb8, 0x89,
	0xb6, 0xe2, 0xf5, 0xda, 0x1a, 0x50, 0x7b, 0x45, 0x1d, 0xca, 0xe9, 0xf5, 0xe2, 0xf0, 0x06, 0xbc,
	0xb7, 0x47, 0xf9, 0x11, 0x25, 0xdd, 0xb1, 0x03, 0xc9, 0xa7, 0xd2, 0x9e, 0x41, 0x51, 0xe4, 0x64,
	0xd6, 0x87, 0x61, 0xde, 0x0b, 0x6c, 0xe2, 0xb2, 0x0b, 0x79, 0xbf, 0xe3, 0xf7, 0x44, 0x3a, 0x86,
	0x3f, 0x82, 0xea, 0x90, 0x46, 0x1c, 0xe3, 0x1a, 0xcc, 0x70, 0xb1, 0x52, 0x13, 0x56, 0x4d, 0xea,
	0x11, 0x39, 0xed, 0x68, 0x0f, 0x7f, 0x0d, 0xab, 0x2f, 0x2c, 0xeb, 0xab, 0x14, 0xd0, 0x17, 0x54,
	0xb8, 0x6e, 0x78, 0xca, 0xfc, 0x69, 0xf3, 0x23, 0x5e, 0x6b, 0x2a, 0x53, 0x7a, 0xf1, 0x5c, 0x3b,
	0x5e, 0xe2, 0x23, 0x58, 0x8f, 0x7a, 0xf3, 0x7f, 0xa2, 0xb6, 0xfe, 0xac, 0xc0, 0x82, 0x6a, 0xf6,
	0x21, 0x0d, 0xfa, 0xcc, 0xa4, 0xe8, 0x27, 0x28, 0x45, 0x26, 0x89, 0x96, 0x86, 0x67, 0x95, 0xf6,
	0x6b, 0xbd, 0x36, 0x16, 0xf7, 0x9d, 0x01, 0x5e, 0xff, 0xe5, 0x9f, 0x7f, 0x7f, 0xcd, 0xaf, 0xe0,
	0x7b, 0x46, 0x7f, 0x27, 0xf9, 0x06, 0x79, 0x2b, 0xf8, 0x2f, 0x8d, 0x90, 0xd9, 0x6e, 0xcf, 0x7f,
	0x9a, 0x6b, 0xa0, 0x37, 0x50, 0x92, 0x9e, 0x3a, 0x40, 0xc3, 0xb7, 0x4c, 0x86, 0xc9, 0xea, 0x4b,
	0xcd, 0xe8, 0x43, 0xa4, 0x19, 0x7f, 0x88, 0x34, 0x77, 0xc5, 0x87, 0x08, 0xde, 0x91, 0x2c, 0x8f,
	0xf1, 0xa3, 0x0c, 0x96, 0x7e, 0x0a, 0xc7, 0x78, 0x2b, 0x7c, 0xf6, 0x52, 0x50, 0x86, 0x50, 0x1d,
	0xf1, 0x5a, 0xb4, 0x9c, 0x30, 0x67, 0x79, 0xf0, 0x44, 0xea, 0xc7, 0x92, 0x7a, 0x03, 0xd7, 0x33,
	0xa8, 0xfd, 0x34, 0x90, 0x20, 0xed, 0xc3, 0xc2, 0xa8, 0x3d, 0xa3, 0x95, 0x31, 0xd6, 0x11, 0xdf,
	0x9e, 0x48, 0xbb, 0x25, 0x69, 0x1f, 0xe1, 0xd5, 0x29, 0xb4, 0x11, 0x92, 0xe0, 0xfd, 0x0e, 0x66,
	0xf6, 0x3d, 0x9b, 0xb9, 0xe8, 0x6e, 0x42, 0x97, 0xf6, 0x6a, 0xfd, 0xce, 0xd5, 0xb0, 0x38, 0xba,
	0x35, 0x49, 0xb1, 0x8c, 0xb5, 0x0c, 0x0a, 0x47, 0xa0, 0x09, 0xe4, 0x43, 0x28, 0x0a, 0xc7, 0x45,
	0xf7, 0x87, 0x08, 0x63, 0xb6, 0xac, 0xdf, 0xcb, 0xde, 0x14, 0x24, 0x77, 0x24, 0x49, 0x15, 0x55,
	0x52, 0x24, 0xe8, 0x35, 0x94, 0x22, 0x13, 0x4e, 0x0f, 0x5b, 0xda, 0x95, 0x27, 0xb6, 0x45, 0x8d,
	0x9b, 0x9e, 0x39, 0x6e, 0x12, 0x41, 0x88, 0x76, 0x00, 0xf6, 0x68, 0xec, 0xc3, 0x68, 0x35, 0xe1,
	0x98, 0x64, 0xea, 0xfa, 0xc3, 0x69, 0x29, 0xa2, 0x0c, 0x5d, 0xf2, 0xd6, 0x10, 0x1a, 0xe7, 0x45,
	0x3f, 0x40, 0x51, 0x58, 0x6b, 0xaa, 0x45, 0xe3, 0x4e, 0x3b, 0xb1, 0xa0, 0x65, 0x09, 0xfc, 0x81,
	0x9e, 0x01, 0x2c, 0x2a, 0xf9, 0x11, 0x4a, 0xd1, 0xfd, 0x4f, 0x8d, 0x6f, 0x96, 0x59, 0x4e, 0xc4,
	0x57, 0xc2, 0x1b, 0x59, 0xc2, 0x5f, 0x43, 0x39, 0x76, 0x39, 0xa4, 0xa5, 0x3b, 0x90, 0xf6, 0x57,
	0x7d, 0x29, 0x63, 0x47, 0xb4, 0xa4, 0x2e, 0x91, 0x75, 0x94, 0x35, 0x3e, 0xd2, 0x0f, 0xd1, 0x6f,
	0x39, 0xd0, 0x27, 0x1b, 0x22, 0x6a, 0x0c, 0xdf, 0x84, 0xd7, 0xb9, 0xe6, 0xc4, 0xf2, 0x3e, 0x96,
	0x22, 0x8c, 0x56, 0x23, 0x43, 0x44, 0xda, 0xd1, 0x8d, 0x6e, 0x82, 0x29, 0xda, 0xfa, 0x47, 0x0e,
	0x96, 0xa7, 0xfa, 0x2a, 0xda, 0xbe, 0xd2, 0xee, 0x5b, 0xea, 0x6b, 0x49, 0x7d, 0x5b, 0x8d, 0x1b,
	0xe8, 0x3b, 0x2e, 0x49, 0x8c, 0x0f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xb2, 0xfa, 0x4f,
	0xf7, 0x0d, 0x00, 0x00,
}
