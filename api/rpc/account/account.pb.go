// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/account/account.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/account/account.proto

It has these top-level messages:
	AccountEntry
	Billing
	Settings
	SignUpRequest
	SignUpReply
	VerificationRequest
	LogInRequest
	LogInReply
	PasswordResetRequest
	PasswordResetReply
	PasswordSetRequest
	PasswordChangeRequest
	ListAccountRequest
	ListAccountReply
	SwitchRequest
	GetAccountDetailsRequest
	GetAccountDetailsReply
	EditAccountRequest
	DeleteAccountRequest
	GetTeamsRequest
	Team
	GetTeamsReply
	AddOrganizationMembershipsRequest
	DeleteOrganizationMembershipsRequest
	CreateTeamRequest
	ListTeamRequest
	ListTeamReply
	EditTeamRequest
	GetTeamDetailsRequest
	GetTeamDetailsReply
	DeleteTeamRequest
	AddTeamMembershipsRequest
	DeleteTeamMembershipsRequest
	Ressource
	GrantPermissionRequest
	ListPermissionRequest
	ListPermissionReply
	EditPermissionRequest
	RevokePermissionRequest
	TransferPermissionOwnershipRequest
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import schema "github.com/appcelerator/amp/data/account/schema"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountEntry struct {
	UserName      string             `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Email         string             `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	EmailVerified bool               `protobuf:"varint,3,opt,name=email_verified,json=emailVerified" json:"email_verified,omitempty"`
	AccountType   schema.AccountType `protobuf:"varint,4,opt,name=account_type,json=accountType,enum=schema.AccountType" json:"account_type,omitempty"`
}

func (m *AccountEntry) Reset()                    { *m = AccountEntry{} }
func (m *AccountEntry) String() string            { return proto.CompactTextString(m) }
func (*AccountEntry) ProtoMessage()               {}
func (*AccountEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccountEntry) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AccountEntry) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AccountEntry) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *AccountEntry) GetAccountType() schema.AccountType {
	if m != nil {
		return m.AccountType
	}
	return schema.AccountType_USER
}

type Billing struct {
	Contact     string `protobuf:"bytes,1,opt,name=contact" json:"contact,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	City        string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	ZipCode     string `protobuf:"bytes,5,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	Email       string `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	PhoneNumber string `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	CardType    string `protobuf:"bytes,8,opt,name=card_type,json=cardType" json:"card_type,omitempty"`
	CardNumber  string `protobuf:"bytes,9,opt,name=card_number,json=cardNumber" json:"card_number,omitempty"`
}

func (m *Billing) Reset()                    { *m = Billing{} }
func (m *Billing) String() string            { return proto.CompactTextString(m) }
func (*Billing) ProtoMessage()               {}
func (*Billing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Billing) GetContact() string {
	if m != nil {
		return m.Contact
	}
	return ""
}

func (m *Billing) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Billing) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Billing) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Billing) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *Billing) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Billing) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Billing) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Billing) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

type Settings struct {
	Param map[string]string `protobuf:"bytes,2,rep,name=param" json:"param,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Settings) Reset()                    { *m = Settings{} }
func (m *Settings) String() string            { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()               {}
func (*Settings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Settings) GetParam() map[string]string {
	if m != nil {
		return m.Param
	}
	return nil
}

type SignUpRequest struct {
	UserName    string             `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Password    string             `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Email       string             `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	AccountType schema.AccountType `protobuf:"varint,4,opt,name=account_type,json=accountType,enum=schema.AccountType" json:"account_type,omitempty"`
}

func (m *SignUpRequest) Reset()                    { *m = SignUpRequest{} }
func (m *SignUpRequest) String() string            { return proto.CompactTextString(m) }
func (*SignUpRequest) ProtoMessage()               {}
func (*SignUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SignUpRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SignUpRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SignUpRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignUpRequest) GetAccountType() schema.AccountType {
	if m != nil {
		return m.AccountType
	}
	return schema.AccountType_USER
}

type SignUpReply struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *SignUpReply) Reset()                    { *m = SignUpReply{} }
func (m *SignUpReply) String() string            { return proto.CompactTextString(m) }
func (*SignUpReply) ProtoMessage()               {}
func (*SignUpReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SignUpReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type VerificationRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *VerificationRequest) Reset()                    { *m = VerificationRequest{} }
func (m *VerificationRequest) String() string            { return proto.CompactTextString(m) }
func (*VerificationRequest) ProtoMessage()               {}
func (*VerificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *VerificationRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// LogIn function
type LogInRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LogInRequest) Reset()                    { *m = LogInRequest{} }
func (m *LogInRequest) String() string            { return proto.CompactTextString(m) }
func (*LogInRequest) ProtoMessage()               {}
func (*LogInRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LogInRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LogInRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LogInReply struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *LogInReply) Reset()                    { *m = LogInReply{} }
func (m *LogInReply) String() string            { return proto.CompactTextString(m) }
func (*LogInReply) ProtoMessage()               {}
func (*LogInReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LogInReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PasswordResetRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (m *PasswordResetRequest) Reset()                    { *m = PasswordResetRequest{} }
func (m *PasswordResetRequest) String() string            { return proto.CompactTextString(m) }
func (*PasswordResetRequest) ProtoMessage()               {}
func (*PasswordResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PasswordResetRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type PasswordResetReply struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *PasswordResetReply) Reset()                    { *m = PasswordResetReply{} }
func (m *PasswordResetReply) String() string            { return proto.CompactTextString(m) }
func (*PasswordResetReply) ProtoMessage()               {}
func (*PasswordResetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PasswordResetReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PasswordSetRequest struct {
	Token    string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *PasswordSetRequest) Reset()                    { *m = PasswordSetRequest{} }
func (m *PasswordSetRequest) String() string            { return proto.CompactTextString(m) }
func (*PasswordSetRequest) ProtoMessage()               {}
func (*PasswordSetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PasswordSetRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PasswordSetRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// PasswordChange function
type PasswordChangeRequest struct {
	UserName         string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	ExistingPassword string `protobuf:"bytes,2,opt,name=existingPassword" json:"existingPassword,omitempty"`
	NewPassword      string `protobuf:"bytes,3,opt,name=newPassword" json:"newPassword,omitempty"`
}

func (m *PasswordChangeRequest) Reset()                    { *m = PasswordChangeRequest{} }
func (m *PasswordChangeRequest) String() string            { return proto.CompactTextString(m) }
func (*PasswordChangeRequest) ProtoMessage()               {}
func (*PasswordChangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PasswordChangeRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *PasswordChangeRequest) GetExistingPassword() string {
	if m != nil {
		return m.ExistingPassword
	}
	return ""
}

func (m *PasswordChangeRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

// List function
type ListAccountRequest struct {
}

func (m *ListAccountRequest) Reset()                    { *m = ListAccountRequest{} }
func (m *ListAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAccountRequest) ProtoMessage()               {}
func (*ListAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type ListAccountReply struct {
	Accounts []*AccountEntry `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *ListAccountReply) Reset()                    { *m = ListAccountReply{} }
func (m *ListAccountReply) String() string            { return proto.CompactTextString(m) }
func (*ListAccountReply) ProtoMessage()               {}
func (*ListAccountReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ListAccountReply) GetAccounts() []*AccountEntry {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// Switch function
type SwitchRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (m *SwitchRequest) Reset()                    { *m = SwitchRequest{} }
func (m *SwitchRequest) String() string            { return proto.CompactTextString(m) }
func (*SwitchRequest) ProtoMessage()               {}
func (*SwitchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SwitchRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

// GetDetails function
type GetAccountDetailsRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (m *GetAccountDetailsRequest) Reset()                    { *m = GetAccountDetailsRequest{} }
func (m *GetAccountDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountDetailsRequest) ProtoMessage()               {}
func (*GetAccountDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetAccountDetailsRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type GetAccountDetailsReply struct {
	Account  *AccountEntry `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Billing  *Billing      `protobuf:"bytes,2,opt,name=billing" json:"billing,omitempty"`
	Settings *Settings     `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
}

func (m *GetAccountDetailsReply) Reset()                    { *m = GetAccountDetailsReply{} }
func (m *GetAccountDetailsReply) String() string            { return proto.CompactTextString(m) }
func (*GetAccountDetailsReply) ProtoMessage()               {}
func (*GetAccountDetailsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetAccountDetailsReply) GetAccount() *AccountEntry {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *GetAccountDetailsReply) GetBilling() *Billing {
	if m != nil {
		return m.Billing
	}
	return nil
}

func (m *GetAccountDetailsReply) GetSettings() *Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// Edit function
type EditAccountRequest struct {
	UserName string    `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Email    string    `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Billing  *Billing  `protobuf:"bytes,3,opt,name=billing" json:"billing,omitempty"`
	Settings *Settings `protobuf:"bytes,4,opt,name=settings" json:"settings,omitempty"`
}

func (m *EditAccountRequest) Reset()                    { *m = EditAccountRequest{} }
func (m *EditAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*EditAccountRequest) ProtoMessage()               {}
func (*EditAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *EditAccountRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *EditAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *EditAccountRequest) GetBilling() *Billing {
	if m != nil {
		return m.Billing
	}
	return nil
}

func (m *EditAccountRequest) GetSettings() *Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// Delete function
type DeleteAccountRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (m *DeleteAccountRequest) Reset()                    { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()               {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *DeleteAccountRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

// GetTeams function
type GetTeamsRequest struct {
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetTeamsRequest) Reset()                    { *m = GetTeamsRequest{} }
func (m *GetTeamsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTeamsRequest) ProtoMessage()               {}
func (*GetTeamsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetTeamsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Team struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Organization string `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (m *Team) Reset()                    { *m = Team{} }
func (m *Team) String() string            { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()               {}
func (*Team) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type GetTeamsReply struct {
	Teams []*Team `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
}

func (m *GetTeamsReply) Reset()                    { *m = GetTeamsReply{} }
func (m *GetTeamsReply) String() string            { return proto.CompactTextString(m) }
func (*GetTeamsReply) ProtoMessage()               {}
func (*GetTeamsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *GetTeamsReply) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

// AddOrganizationMemberships
type AddOrganizationMembershipsRequest struct {
	Name    string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Members []string `protobuf:"bytes,2,rep,name=Members" json:"Members,omitempty"`
}

func (m *AddOrganizationMembershipsRequest) Reset()         { *m = AddOrganizationMembershipsRequest{} }
func (m *AddOrganizationMembershipsRequest) String() string { return proto.CompactTextString(m) }
func (*AddOrganizationMembershipsRequest) ProtoMessage()    {}
func (*AddOrganizationMembershipsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *AddOrganizationMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddOrganizationMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// DeleteOrganizationMemberships
type DeleteOrganizationMembershipsRequest struct {
	Name    string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Members []string `protobuf:"bytes,2,rep,name=Members" json:"Members,omitempty"`
}

func (m *DeleteOrganizationMembershipsRequest) Reset()         { *m = DeleteOrganizationMembershipsRequest{} }
func (m *DeleteOrganizationMembershipsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOrganizationMembershipsRequest) ProtoMessage()    {}
func (*DeleteOrganizationMembershipsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23}
}

func (m *DeleteOrganizationMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteOrganizationMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// Create function
type CreateTeamRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *CreateTeamRequest) Reset()                    { *m = CreateTeamRequest{} }
func (m *CreateTeamRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTeamRequest) ProtoMessage()               {}
func (*CreateTeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateTeamRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *CreateTeamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTeamRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// List function
type ListTeamRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *ListTeamRequest) Reset()                    { *m = ListTeamRequest{} }
func (m *ListTeamRequest) String() string            { return proto.CompactTextString(m) }
func (*ListTeamRequest) ProtoMessage()               {}
func (*ListTeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ListTeamRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type ListTeamReply struct {
	TeamNames []string `protobuf:"bytes,2,rep,name=team_names,json=teamNames" json:"team_names,omitempty"`
}

func (m *ListTeamReply) Reset()                    { *m = ListTeamReply{} }
func (m *ListTeamReply) String() string            { return proto.CompactTextString(m) }
func (*ListTeamReply) ProtoMessage()               {}
func (*ListTeamReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ListTeamReply) GetTeamNames() []string {
	if m != nil {
		return m.TeamNames
	}
	return nil
}

// Edit function
type EditTeamRequest struct {
	Organization    string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NewOrganization string `protobuf:"bytes,3,opt,name=new_organization,json=newOrganization" json:"new_organization,omitempty"`
	NewName         string `protobuf:"bytes,4,opt,name=new_name,json=newName" json:"new_name,omitempty"`
	NewDescription  string `protobuf:"bytes,5,opt,name=new_description,json=newDescription" json:"new_description,omitempty"`
}

func (m *EditTeamRequest) Reset()                    { *m = EditTeamRequest{} }
func (m *EditTeamRequest) String() string            { return proto.CompactTextString(m) }
func (*EditTeamRequest) ProtoMessage()               {}
func (*EditTeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *EditTeamRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *EditTeamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditTeamRequest) GetNewOrganization() string {
	if m != nil {
		return m.NewOrganization
	}
	return ""
}

func (m *EditTeamRequest) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *EditTeamRequest) GetNewDescription() string {
	if m != nil {
		return m.NewDescription
	}
	return ""
}

// GetDetails function
type GetTeamDetailsRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetTeamDetailsRequest) Reset()                    { *m = GetTeamDetailsRequest{} }
func (m *GetTeamDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTeamDetailsRequest) ProtoMessage()               {}
func (*GetTeamDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *GetTeamDetailsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *GetTeamDetailsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetTeamDetailsReply struct {
	Organization string   `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Members      []string `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
}

func (m *GetTeamDetailsReply) Reset()                    { *m = GetTeamDetailsReply{} }
func (m *GetTeamDetailsReply) String() string            { return proto.CompactTextString(m) }
func (*GetTeamDetailsReply) ProtoMessage()               {}
func (*GetTeamDetailsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *GetTeamDetailsReply) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *GetTeamDetailsReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetTeamDetailsReply) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetTeamDetailsReply) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// Delete function
type DeleteTeamRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteTeamRequest) Reset()                    { *m = DeleteTeamRequest{} }
func (m *DeleteTeamRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTeamRequest) ProtoMessage()               {}
func (*DeleteTeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *DeleteTeamRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DeleteTeamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// AddMembership function
type AddTeamMembershipsRequest struct {
	Organization string   `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Members      []string `protobuf:"bytes,3,rep,name=Members" json:"Members,omitempty"`
}

func (m *AddTeamMembershipsRequest) Reset()                    { *m = AddTeamMembershipsRequest{} }
func (m *AddTeamMembershipsRequest) String() string            { return proto.CompactTextString(m) }
func (*AddTeamMembershipsRequest) ProtoMessage()               {}
func (*AddTeamMembershipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AddTeamMembershipsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *AddTeamMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddTeamMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// DeleteMembership function
type DeleteTeamMembershipsRequest struct {
	Organization string   `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Members      []string `protobuf:"bytes,3,rep,name=Members" json:"Members,omitempty"`
}

func (m *DeleteTeamMembershipsRequest) Reset()                    { *m = DeleteTeamMembershipsRequest{} }
func (m *DeleteTeamMembershipsRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTeamMembershipsRequest) ProtoMessage()               {}
func (*DeleteTeamMembershipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *DeleteTeamMembershipsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DeleteTeamMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteTeamMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// Ressource struct
type Ressource struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Team         string `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	Level        string `protobuf:"bytes,3,opt,name=level" json:"level,omitempty"`
	ResourceId   string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *Ressource) Reset()                    { *m = Ressource{} }
func (m *Ressource) String() string            { return proto.CompactTextString(m) }
func (*Ressource) ProtoMessage()               {}
func (*Ressource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *Ressource) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Ressource) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Ressource) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Ressource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

// Grant function
type GrantPermissionRequest struct {
	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource" json:"ressource,omitempty"`
}

func (m *GrantPermissionRequest) Reset()                    { *m = GrantPermissionRequest{} }
func (m *GrantPermissionRequest) String() string            { return proto.CompactTextString(m) }
func (*GrantPermissionRequest) ProtoMessage()               {}
func (*GrantPermissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *GrantPermissionRequest) GetRessource() *Ressource {
	if m != nil {
		return m.Ressource
	}
	return nil
}

// List function
type ListPermissionRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Team         string `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	Level        string `protobuf:"bytes,3,opt,name=level" json:"level,omitempty"`
	ResourceId   string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *ListPermissionRequest) Reset()                    { *m = ListPermissionRequest{} }
func (m *ListPermissionRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPermissionRequest) ProtoMessage()               {}
func (*ListPermissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ListPermissionRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *ListPermissionRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *ListPermissionRequest) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *ListPermissionRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type ListPermissionReply struct {
	Ressources []*Ressource `protobuf:"bytes,1,rep,name=ressources" json:"ressources,omitempty"`
}

func (m *ListPermissionReply) Reset()                    { *m = ListPermissionReply{} }
func (m *ListPermissionReply) String() string            { return proto.CompactTextString(m) }
func (*ListPermissionReply) ProtoMessage()               {}
func (*ListPermissionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ListPermissionReply) GetRessources() []*Ressource {
	if m != nil {
		return m.Ressources
	}
	return nil
}

// Edit function
type EditPermissionRequest struct {
	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource" json:"ressource,omitempty"`
}

func (m *EditPermissionRequest) Reset()                    { *m = EditPermissionRequest{} }
func (m *EditPermissionRequest) String() string            { return proto.CompactTextString(m) }
func (*EditPermissionRequest) ProtoMessage()               {}
func (*EditPermissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *EditPermissionRequest) GetRessource() *Ressource {
	if m != nil {
		return m.Ressource
	}
	return nil
}

// Revoke function
type RevokePermissionRequest struct {
	Ressource *Ressource `protobuf:"bytes,1,opt,name=ressource" json:"ressource,omitempty"`
}

func (m *RevokePermissionRequest) Reset()                    { *m = RevokePermissionRequest{} }
func (m *RevokePermissionRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokePermissionRequest) ProtoMessage()               {}
func (*RevokePermissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *RevokePermissionRequest) GetRessource() *Ressource {
	if m != nil {
		return m.Ressource
	}
	return nil
}

// TransferOwnership function
type TransferPermissionOwnershipRequest struct {
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Team         string `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	ResourceId   string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *TransferPermissionOwnershipRequest) Reset()         { *m = TransferPermissionOwnershipRequest{} }
func (m *TransferPermissionOwnershipRequest) String() string { return proto.CompactTextString(m) }
func (*TransferPermissionOwnershipRequest) ProtoMessage()    {}
func (*TransferPermissionOwnershipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39}
}

func (m *TransferPermissionOwnershipRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *TransferPermissionOwnershipRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *TransferPermissionOwnershipRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func init() {
	proto.RegisterType((*AccountEntry)(nil), "account.AccountEntry")
	proto.RegisterType((*Billing)(nil), "account.Billing")
	proto.RegisterType((*Settings)(nil), "account.Settings")
	proto.RegisterType((*SignUpRequest)(nil), "account.SignUpRequest")
	proto.RegisterType((*SignUpReply)(nil), "account.SignUpReply")
	proto.RegisterType((*VerificationRequest)(nil), "account.VerificationRequest")
	proto.RegisterType((*LogInRequest)(nil), "account.LogInRequest")
	proto.RegisterType((*LogInReply)(nil), "account.LogInReply")
	proto.RegisterType((*PasswordResetRequest)(nil), "account.PasswordResetRequest")
	proto.RegisterType((*PasswordResetReply)(nil), "account.PasswordResetReply")
	proto.RegisterType((*PasswordSetRequest)(nil), "account.PasswordSetRequest")
	proto.RegisterType((*PasswordChangeRequest)(nil), "account.PasswordChangeRequest")
	proto.RegisterType((*ListAccountRequest)(nil), "account.ListAccountRequest")
	proto.RegisterType((*ListAccountReply)(nil), "account.ListAccountReply")
	proto.RegisterType((*SwitchRequest)(nil), "account.SwitchRequest")
	proto.RegisterType((*GetAccountDetailsRequest)(nil), "account.GetAccountDetailsRequest")
	proto.RegisterType((*GetAccountDetailsReply)(nil), "account.GetAccountDetailsReply")
	proto.RegisterType((*EditAccountRequest)(nil), "account.EditAccountRequest")
	proto.RegisterType((*DeleteAccountRequest)(nil), "account.DeleteAccountRequest")
	proto.RegisterType((*GetTeamsRequest)(nil), "account.GetTeamsRequest")
	proto.RegisterType((*Team)(nil), "account.Team")
	proto.RegisterType((*GetTeamsReply)(nil), "account.GetTeamsReply")
	proto.RegisterType((*AddOrganizationMembershipsRequest)(nil), "account.AddOrganizationMembershipsRequest")
	proto.RegisterType((*DeleteOrganizationMembershipsRequest)(nil), "account.DeleteOrganizationMembershipsRequest")
	proto.RegisterType((*CreateTeamRequest)(nil), "account.CreateTeamRequest")
	proto.RegisterType((*ListTeamRequest)(nil), "account.ListTeamRequest")
	proto.RegisterType((*ListTeamReply)(nil), "account.ListTeamReply")
	proto.RegisterType((*EditTeamRequest)(nil), "account.EditTeamRequest")
	proto.RegisterType((*GetTeamDetailsRequest)(nil), "account.GetTeamDetailsRequest")
	proto.RegisterType((*GetTeamDetailsReply)(nil), "account.GetTeamDetailsReply")
	proto.RegisterType((*DeleteTeamRequest)(nil), "account.DeleteTeamRequest")
	proto.RegisterType((*AddTeamMembershipsRequest)(nil), "account.AddTeamMembershipsRequest")
	proto.RegisterType((*DeleteTeamMembershipsRequest)(nil), "account.DeleteTeamMembershipsRequest")
	proto.RegisterType((*Ressource)(nil), "account.Ressource")
	proto.RegisterType((*GrantPermissionRequest)(nil), "account.GrantPermissionRequest")
	proto.RegisterType((*ListPermissionRequest)(nil), "account.ListPermissionRequest")
	proto.RegisterType((*ListPermissionReply)(nil), "account.ListPermissionReply")
	proto.RegisterType((*EditPermissionRequest)(nil), "account.EditPermissionRequest")
	proto.RegisterType((*RevokePermissionRequest)(nil), "account.RevokePermissionRequest")
	proto.RegisterType((*TransferPermissionOwnershipRequest)(nil), "account.TransferPermissionOwnershipRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Account service

type AccountClient interface {
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpReply, error)
	Verify(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Login(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*LogInReply, error)
	PasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*PasswordResetReply, error)
	PasswordSet(ctx context.Context, in *PasswordSetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	PasswordChange(ctx context.Context, in *PasswordChangeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	List(ctx context.Context, in *ListAccountRequest, opts ...grpc.CallOption) (*ListAccountReply, error)
	Switch(ctx context.Context, in *SwitchRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetDetails(ctx context.Context, in *GetAccountDetailsRequest, opts ...grpc.CallOption) (*GetAccountDetailsReply, error)
	Edit(ctx context.Context, in *EditAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetTeams(ctx context.Context, in *GetTeamsRequest, opts ...grpc.CallOption) (*GetTeamsReply, error)
	AddOrganizationMemberships(ctx context.Context, in *AddOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	DeleteOrganizationMemberships(ctx context.Context, in *DeleteOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Teams
	CreateTeam(ctx context.Context, in *CreateTeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ListTeam(ctx context.Context, in *ListTeamRequest, opts ...grpc.CallOption) (*ListTeamReply, error)
	EditTeam(ctx context.Context, in *EditTeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetTeamDetails(ctx context.Context, in *GetTeamDetailsRequest, opts ...grpc.CallOption) (*GetTeamDetailsReply, error)
	DeleteTeam(ctx context.Context, in *DeleteTeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	AddTeamMemberships(ctx context.Context, in *AddTeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	DeleteTeamMemberships(ctx context.Context, in *DeleteTeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Permissions
	GrantPermission(ctx context.Context, in *GrantPermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ListPermission(ctx context.Context, in *ListPermissionRequest, opts ...grpc.CallOption) (*ListPermissionReply, error)
	EditPermission(ctx context.Context, in *EditPermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	RevokePermission(ctx context.Context, in *RevokePermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	TransferPermissionOwnership(ctx context.Context, in *TransferPermissionOwnershipRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type accountClient struct {
	cc *grpc.ClientConn
}

func NewAccountClient(cc *grpc.ClientConn) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpReply, error) {
	out := new(SignUpReply)
	err := grpc.Invoke(ctx, "/account.Account/SignUp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Verify(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/Verify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Login(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*LogInReply, error) {
	out := new(LogInReply)
	err := grpc.Invoke(ctx, "/account.Account/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) PasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*PasswordResetReply, error) {
	out := new(PasswordResetReply)
	err := grpc.Invoke(ctx, "/account.Account/PasswordReset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) PasswordSet(ctx context.Context, in *PasswordSetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/PasswordSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) PasswordChange(ctx context.Context, in *PasswordChangeRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/PasswordChange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) List(ctx context.Context, in *ListAccountRequest, opts ...grpc.CallOption) (*ListAccountReply, error) {
	out := new(ListAccountReply)
	err := grpc.Invoke(ctx, "/account.Account/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Switch(ctx context.Context, in *SwitchRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/Switch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetDetails(ctx context.Context, in *GetAccountDetailsRequest, opts ...grpc.CallOption) (*GetAccountDetailsReply, error) {
	out := new(GetAccountDetailsReply)
	err := grpc.Invoke(ctx, "/account.Account/GetDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Edit(ctx context.Context, in *EditAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/Edit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetTeams(ctx context.Context, in *GetTeamsRequest, opts ...grpc.CallOption) (*GetTeamsReply, error) {
	out := new(GetTeamsReply)
	err := grpc.Invoke(ctx, "/account.Account/GetTeams", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) AddOrganizationMemberships(ctx context.Context, in *AddOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/AddOrganizationMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) DeleteOrganizationMemberships(ctx context.Context, in *DeleteOrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/DeleteOrganizationMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) CreateTeam(ctx context.Context, in *CreateTeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/CreateTeam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) ListTeam(ctx context.Context, in *ListTeamRequest, opts ...grpc.CallOption) (*ListTeamReply, error) {
	out := new(ListTeamReply)
	err := grpc.Invoke(ctx, "/account.Account/ListTeam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) EditTeam(ctx context.Context, in *EditTeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/EditTeam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetTeamDetails(ctx context.Context, in *GetTeamDetailsRequest, opts ...grpc.CallOption) (*GetTeamDetailsReply, error) {
	out := new(GetTeamDetailsReply)
	err := grpc.Invoke(ctx, "/account.Account/GetTeamDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) DeleteTeam(ctx context.Context, in *DeleteTeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/DeleteTeam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) AddTeamMemberships(ctx context.Context, in *AddTeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/AddTeamMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) DeleteTeamMemberships(ctx context.Context, in *DeleteTeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/DeleteTeamMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GrantPermission(ctx context.Context, in *GrantPermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/GrantPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) ListPermission(ctx context.Context, in *ListPermissionRequest, opts ...grpc.CallOption) (*ListPermissionReply, error) {
	out := new(ListPermissionReply)
	err := grpc.Invoke(ctx, "/account.Account/ListPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) EditPermission(ctx context.Context, in *EditPermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/EditPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) RevokePermission(ctx context.Context, in *RevokePermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/RevokePermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) TransferPermissionOwnership(ctx context.Context, in *TransferPermissionOwnershipRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.Account/TransferPermissionOwnership", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountServer interface {
	SignUp(context.Context, *SignUpRequest) (*SignUpReply, error)
	Verify(context.Context, *VerificationRequest) (*google_protobuf1.Empty, error)
	Login(context.Context, *LogInRequest) (*LogInReply, error)
	PasswordReset(context.Context, *PasswordResetRequest) (*PasswordResetReply, error)
	PasswordSet(context.Context, *PasswordSetRequest) (*google_protobuf1.Empty, error)
	PasswordChange(context.Context, *PasswordChangeRequest) (*google_protobuf1.Empty, error)
	List(context.Context, *ListAccountRequest) (*ListAccountReply, error)
	Switch(context.Context, *SwitchRequest) (*google_protobuf1.Empty, error)
	GetDetails(context.Context, *GetAccountDetailsRequest) (*GetAccountDetailsReply, error)
	Edit(context.Context, *EditAccountRequest) (*google_protobuf1.Empty, error)
	Delete(context.Context, *DeleteAccountRequest) (*google_protobuf1.Empty, error)
	GetTeams(context.Context, *GetTeamsRequest) (*GetTeamsReply, error)
	AddOrganizationMemberships(context.Context, *AddOrganizationMembershipsRequest) (*google_protobuf1.Empty, error)
	DeleteOrganizationMemberships(context.Context, *DeleteOrganizationMembershipsRequest) (*google_protobuf1.Empty, error)
	// Teams
	CreateTeam(context.Context, *CreateTeamRequest) (*google_protobuf1.Empty, error)
	ListTeam(context.Context, *ListTeamRequest) (*ListTeamReply, error)
	EditTeam(context.Context, *EditTeamRequest) (*google_protobuf1.Empty, error)
	GetTeamDetails(context.Context, *GetTeamDetailsRequest) (*GetTeamDetailsReply, error)
	DeleteTeam(context.Context, *DeleteTeamRequest) (*google_protobuf1.Empty, error)
	AddTeamMemberships(context.Context, *AddTeamMembershipsRequest) (*google_protobuf1.Empty, error)
	DeleteTeamMemberships(context.Context, *DeleteTeamMembershipsRequest) (*google_protobuf1.Empty, error)
	// Permissions
	GrantPermission(context.Context, *GrantPermissionRequest) (*google_protobuf1.Empty, error)
	ListPermission(context.Context, *ListPermissionRequest) (*ListPermissionReply, error)
	EditPermission(context.Context, *EditPermissionRequest) (*google_protobuf1.Empty, error)
	RevokePermission(context.Context, *RevokePermissionRequest) (*google_protobuf1.Empty, error)
	TransferPermissionOwnership(context.Context, *TransferPermissionOwnershipRequest) (*google_protobuf1.Empty, error)
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Verify(ctx, req.(*VerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Login(ctx, req.(*LogInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_PasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).PasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/PasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).PasswordReset(ctx, req.(*PasswordResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_PasswordSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).PasswordSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/PasswordSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).PasswordSet(ctx, req.(*PasswordSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_PasswordChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).PasswordChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/PasswordChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).PasswordChange(ctx, req.(*PasswordChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).List(ctx, req.(*ListAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Switch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Switch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/Switch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Switch(ctx, req.(*SwitchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/GetDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetDetails(ctx, req.(*GetAccountDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Edit(ctx, req.(*EditAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Delete(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/GetTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetTeams(ctx, req.(*GetTeamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_AddOrganizationMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrganizationMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).AddOrganizationMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/AddOrganizationMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).AddOrganizationMemberships(ctx, req.(*AddOrganizationMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_DeleteOrganizationMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).DeleteOrganizationMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/DeleteOrganizationMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).DeleteOrganizationMemberships(ctx, req.(*DeleteOrganizationMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_CreateTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).CreateTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/CreateTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).CreateTeam(ctx, req.(*CreateTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_ListTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ListTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/ListTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ListTeam(ctx, req.(*ListTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_EditTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).EditTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/EditTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).EditTeam(ctx, req.(*EditTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetTeamDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetTeamDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/GetTeamDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetTeamDetails(ctx, req.(*GetTeamDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_DeleteTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).DeleteTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/DeleteTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).DeleteTeam(ctx, req.(*DeleteTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_AddTeamMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTeamMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).AddTeamMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/AddTeamMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).AddTeamMemberships(ctx, req.(*AddTeamMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_DeleteTeamMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTeamMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).DeleteTeamMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/DeleteTeamMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).DeleteTeamMemberships(ctx, req.(*DeleteTeamMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GrantPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GrantPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/GrantPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GrantPermission(ctx, req.(*GrantPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_ListPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ListPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/ListPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ListPermission(ctx, req.(*ListPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_EditPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).EditPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/EditPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).EditPermission(ctx, req.(*EditPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_RevokePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokePermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).RevokePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/RevokePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).RevokePermission(ctx, req.(*RevokePermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_TransferPermissionOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferPermissionOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).TransferPermissionOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Account/TransferPermissionOwnership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).TransferPermissionOwnership(ctx, req.(*TransferPermissionOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _Account_SignUp_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _Account_Verify_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Account_Login_Handler,
		},
		{
			MethodName: "PasswordReset",
			Handler:    _Account_PasswordReset_Handler,
		},
		{
			MethodName: "PasswordSet",
			Handler:    _Account_PasswordSet_Handler,
		},
		{
			MethodName: "PasswordChange",
			Handler:    _Account_PasswordChange_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Account_List_Handler,
		},
		{
			MethodName: "Switch",
			Handler:    _Account_Switch_Handler,
		},
		{
			MethodName: "GetDetails",
			Handler:    _Account_GetDetails_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _Account_Edit_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Account_Delete_Handler,
		},
		{
			MethodName: "GetTeams",
			Handler:    _Account_GetTeams_Handler,
		},
		{
			MethodName: "AddOrganizationMemberships",
			Handler:    _Account_AddOrganizationMemberships_Handler,
		},
		{
			MethodName: "DeleteOrganizationMemberships",
			Handler:    _Account_DeleteOrganizationMemberships_Handler,
		},
		{
			MethodName: "CreateTeam",
			Handler:    _Account_CreateTeam_Handler,
		},
		{
			MethodName: "ListTeam",
			Handler:    _Account_ListTeam_Handler,
		},
		{
			MethodName: "EditTeam",
			Handler:    _Account_EditTeam_Handler,
		},
		{
			MethodName: "GetTeamDetails",
			Handler:    _Account_GetTeamDetails_Handler,
		},
		{
			MethodName: "DeleteTeam",
			Handler:    _Account_DeleteTeam_Handler,
		},
		{
			MethodName: "AddTeamMemberships",
			Handler:    _Account_AddTeamMemberships_Handler,
		},
		{
			MethodName: "DeleteTeamMemberships",
			Handler:    _Account_DeleteTeamMemberships_Handler,
		},
		{
			MethodName: "GrantPermission",
			Handler:    _Account_GrantPermission_Handler,
		},
		{
			MethodName: "ListPermission",
			Handler:    _Account_ListPermission_Handler,
		},
		{
			MethodName: "EditPermission",
			Handler:    _Account_EditPermission_Handler,
		},
		{
			MethodName: "RevokePermission",
			Handler:    _Account_RevokePermission_Handler,
		},
		{
			MethodName: "TransferPermissionOwnership",
			Handler:    _Account_TransferPermissionOwnership_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/account/account.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/account/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1883 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x58, 0x4f, 0x6f, 0xe3, 0xc6,
	0x15, 0x07, 0xd7, 0xb2, 0x25, 0x3d, 0x59, 0xb6, 0x77, 0xfc, 0x4f, 0xa6, 0xed, 0xd8, 0x9e, 0xad,
	0x1b, 0x47, 0x9b, 0x48, 0xb1, 0xdc, 0xa4, 0x49, 0xd0, 0x14, 0xd8, 0xec, 0xba, 0xae, 0x93, 0x6d,
	0xd6, 0xa1, 0x9d, 0xde, 0x52, 0x95, 0x26, 0xc7, 0x32, 0xb1, 0x12, 0xc9, 0x90, 0x94, 0x15, 0x39,
	0x70, 0x0f, 0x39, 0x14, 0xc8, 0xa5, 0x40, 0x51, 0xa0, 0x05, 0x8a, 0x1e, 0x8a, 0xa2, 0xe8, 0xa9,
	0xa7, 0xf6, 0xd2, 0xef, 0xd1, 0xaf, 0xd0, 0x2f, 0xd1, 0x5b, 0x30, 0x7f, 0x48, 0x8e, 0x28, 0xd2,
	0x92, 0x1c, 0x27, 0x27, 0x6b, 0x66, 0xde, 0xbc, 0xf7, 0x7b, 0xbf, 0x79, 0x33, 0x7c, 0x3f, 0xc3,
	0xbb, 0x2d, 0x2b, 0xb8, 0xec, 0x9e, 0xd7, 0x0c, 0xa7, 0x53, 0xd7, 0x5d, 0xd7, 0x20, 0x6d, 0xe2,
	0xe9, 0x81, 0xe3, 0xd5, 0xf5, 0x8e, 0x5b, 0xd7, 0x5d, 0xab, 0xee, 0xb9, 0x46, 0x5d, 0x37, 0x0c,
	0xa7, 0x6b, 0x07, 0xe1, 0xdf, 0x9a, 0xeb, 0x39, 0x81, 0x83, 0xf2, 0x62, 0xa8, 0x6e, 0xb4, 0x1c,
	0xa7, 0xd5, 0x26, 0xcc, 0x5c, 0xb7, 0x6d, 0x27, 0xd0, 0x03, 0xcb, 0xb1, 0x7d, 0x6e, 0xa6, 0xae,
	0x8b, 0x55, 0x36, 0x3a, 0xef, 0x5e, 0xd4, 0x49, 0xc7, 0x0d, 0xfa, 0x62, 0xf1, 0xfd, 0xdb, 0xc2,
	0x9b, 0x7a, 0xa0, 0x47, 0xb1, 0x7d, 0xe3, 0x92, 0x74, 0xf4, 0x41, 0x08, 0xf8, 0xaf, 0x0a, 0xcc,
	0x3e, 0xe1, 0x33, 0x87, 0x76, 0xe0, 0xf5, 0xd1, 0x3a, 0x14, 0xbb, 0x3e, 0xf1, 0x9a, 0xb6, 0xde,
	0x21, 0x15, 0x65, 0x5b, 0xd9, 0x2b, 0x6a, 0x05, 0x3a, 0xf1, 0xb1, 0xde, 0x21, 0x68, 0x09, 0xa6,
	0x49, 0x47, 0xb7, 0xda, 0x95, 0x07, 0x6c, 0x81, 0x0f, 0xd0, 0x2e, 0xcc, 0xb1, 0x1f, 0xcd, 0x2b,
	0xe2, 0x59, 0x17, 0x16, 0x31, 0x2b, 0x53, 0xdb, 0xca, 0x5e, 0x41, 0x2b, 0xb3, 0xd9, 0x5f, 0x8a,
	0x49, 0xf4, 0x36, 0xcc, 0x8a, 0xd8, 0xcd, 0xa0, 0xef, 0x92, 0x4a, 0x6e, 0x5b, 0xd9, 0x9b, 0x6b,
	0x2c, 0xd6, 0x38, 0xae, 0x9a, 0x40, 0x71, 0xd6, 0x77, 0x89, 0x56, 0xd2, 0xe3, 0x01, 0xfe, 0xbf,
	0x02, 0xf9, 0x0f, 0xac, 0x76, 0xdb, 0xb2, 0x5b, 0xa8, 0x02, 0x79, 0xc3, 0xb1, 0x03, 0xdd, 0x08,
	0x04, 0xb6, 0x70, 0x48, 0x57, 0x74, 0xd3, 0xf4, 0x88, 0xef, 0x0b, 0x70, 0xe1, 0x10, 0x21, 0xc8,
	0x19, 0x56, 0xd0, 0x67, 0xa0, 0x8a, 0x1a, 0xfb, 0x4d, 0x13, 0xf1, 0x03, 0x3d, 0xe0, 0x20, 0x8a,
	0x1a, 0x1f, 0xa0, 0x35, 0x28, 0x5c, 0x5b, 0x6e, 0xd3, 0x70, 0x4c, 0x52, 0x99, 0xe6, 0x4e, 0xae,
	0x2d, 0xf7, 0xa9, 0x63, 0x4a, 0x99, 0xcf, 0xc8, 0x99, 0xef, 0xc0, 0xac, 0x7b, 0xe9, 0xd8, 0xa4,
	0x69, 0x77, 0x3b, 0xe7, 0xc4, 0xab, 0xe4, 0xd9, 0x62, 0x89, 0xcd, 0x7d, 0xcc, 0xa6, 0x28, 0x9f,
	0x86, 0xee, 0x99, 0x3c, 0xe5, 0x02, 0xe7, 0x93, 0x4e, 0xd0, 0xd4, 0xd0, 0x16, 0x94, 0xd8, 0xa2,
	0xd8, 0x5e, 0x64, 0xcb, 0x40, 0xa7, 0xf8, 0x6e, 0xfc, 0x05, 0x14, 0x4e, 0x49, 0x10, 0x58, 0x76,
	0xcb, 0x47, 0x0d, 0x98, 0x76, 0x75, 0x4f, 0xef, 0x54, 0x1e, 0x6c, 0x4f, 0xed, 0x95, 0x1a, 0x1b,
	0xb5, 0xf0, 0x24, 0x43, 0x8b, 0xda, 0x09, 0x5d, 0x66, 0xc7, 0xa8, 0x71, 0x53, 0xf5, 0x1d, 0x80,
	0x78, 0x12, 0x2d, 0xc0, 0xd4, 0x4b, 0xd2, 0x17, 0xcc, 0xd1, 0x9f, 0x34, 0xad, 0x2b, 0xbd, 0xdd,
	0x25, 0xe1, 0x81, 0xb2, 0xc1, 0x7b, 0x0f, 0xde, 0x51, 0xf0, 0x1f, 0x15, 0x28, 0x9f, 0x5a, 0x2d,
	0xfb, 0x53, 0x57, 0x23, 0x9f, 0x77, 0x89, 0x1f, 0xdc, 0x5e, 0x19, 0x2a, 0x14, 0x5c, 0xdd, 0xf7,
	0x7b, 0x8e, 0x67, 0x0a, 0x5f, 0xd1, 0x38, 0xe6, 0x6e, 0x4a, 0xe6, 0xee, 0xae, 0xe5, 0xf0, 0x08,
	0x4a, 0x21, 0x2e, 0xb7, 0xcd, 0x32, 0x08, 0x9c, 0x97, 0xc4, 0x16, 0x88, 0xf8, 0x00, 0x3f, 0x86,
	0x45, 0x5e, 0x77, 0x06, 0xbb, 0x49, 0x61, 0x0a, 0xe9, 0xc6, 0x47, 0x30, 0xfb, 0xdc, 0x69, 0x1d,
	0xdb, 0xdf, 0x36, 0x51, 0x8c, 0x01, 0x84, 0xa3, 0x6c, 0x64, 0x07, 0xb0, 0x74, 0x22, 0xec, 0x35,
	0xe2, 0x93, 0x60, 0x9c, 0xa0, 0xb8, 0x0a, 0x28, 0xb1, 0x29, 0x3b, 0xc0, 0xcf, 0x62, 0xdb, 0xd3,
	0xd8, 0x7d, 0xaa, 0xed, 0xad, 0xc9, 0x7c, 0xa5, 0xc0, 0x72, 0xe8, 0xe8, 0xe9, 0xa5, 0x6e, 0xb7,
	0xc8, 0x58, 0xfc, 0x54, 0x61, 0x81, 0x7c, 0x61, 0xf9, 0xb4, 0x20, 0x4f, 0x06, 0x5d, 0x0f, 0xcd,
	0xa3, 0x6d, 0x28, 0xd9, 0xa4, 0x17, 0x99, 0xf1, 0xf2, 0x90, 0xa7, 0xf0, 0x12, 0xa0, 0xe7, 0x96,
	0x1f, 0x88, 0x62, 0x10, 0x00, 0xf0, 0x21, 0x2c, 0x0c, 0xcc, 0x52, 0x32, 0xf6, 0xa1, 0x20, 0xaa,
	0xc4, 0xaf, 0x28, 0xec, 0x82, 0x2c, 0x47, 0x17, 0x44, 0x7e, 0xe0, 0xb4, 0xc8, 0x0c, 0xbf, 0x0e,
	0xe5, 0xd3, 0x9e, 0x15, 0x18, 0x97, 0x63, 0x9d, 0xc1, 0x8f, 0xa1, 0x72, 0x44, 0xc2, 0x98, 0xcf,
	0x48, 0xa0, 0x5b, 0x6d, 0x7f, 0xac, 0x8d, 0x7f, 0x57, 0x60, 0x25, 0x65, 0x27, 0x05, 0x5d, 0x87,
	0xf0, 0x13, 0xc0, 0x76, 0x65, 0x62, 0x0e, 0xad, 0x50, 0x15, 0xf2, 0xe7, 0xfc, 0x29, 0x64, 0xa4,
	0x96, 0x1a, 0x0b, 0xd1, 0x06, 0xf1, 0x44, 0x6a, 0xa1, 0x01, 0x7a, 0x03, 0x0a, 0xbe, 0x78, 0x19,
	0x18, 0xb5, 0xa5, 0xc6, 0xc3, 0xa1, 0x27, 0x43, 0x8b, 0x4c, 0xf0, 0xdf, 0x14, 0x40, 0x87, 0xa6,
	0x95, 0xe0, 0xfa, 0x2e, 0xdf, 0x03, 0x09, 0xe4, 0xd4, 0x24, 0x20, 0x73, 0xa3, 0x41, 0x1e, 0xc0,
	0xd2, 0x33, 0xd2, 0x26, 0x01, 0x99, 0x00, 0x25, 0xde, 0x85, 0xf9, 0x23, 0x12, 0x9c, 0x11, 0xbd,
	0x13, 0x1d, 0x18, 0x82, 0x1c, 0x33, 0xe5, 0xb8, 0xd9, 0x6f, 0xfc, 0x53, 0xc8, 0x51, 0x9b, 0x68,
	0x4d, 0x89, 0xd7, 0x10, 0x86, 0x59, 0xc7, 0x6b, 0xe9, 0xb6, 0x75, 0xcd, 0xde, 0x13, 0xb1, 0x6f,
	0x60, 0x0e, 0xff, 0x08, 0xca, 0x71, 0x18, 0x7a, 0xba, 0x8f, 0x60, 0x3a, 0xa0, 0x23, 0x51, 0x8f,
	0xe5, 0x28, 0x31, 0x6a, 0xa3, 0xf1, 0x35, 0xfc, 0x09, 0xec, 0x3c, 0x31, 0xcd, 0x17, 0x92, 0xa3,
	0x5f, 0x10, 0xfa, 0xf4, 0xfb, 0x97, 0x96, 0x3b, 0x04, 0x57, 0x86, 0x54, 0x81, 0xbc, 0xb0, 0x64,
	0x1f, 0x84, 0xa2, 0x16, 0x0e, 0xf1, 0x19, 0xfc, 0x80, 0x93, 0x74, 0xaf, 0x5e, 0x3b, 0xf0, 0xf0,
	0xa9, 0x47, 0xf4, 0x80, 0x30, 0xf4, 0xc2, 0x45, 0x92, 0x17, 0x65, 0x98, 0x97, 0x34, 0xae, 0xe9,
	0xcd, 0x37, 0x89, 0x6f, 0x78, 0x96, 0xcb, 0xb6, 0x89, 0x9b, 0x2f, 0x4d, 0xe1, 0xb7, 0x60, 0x9e,
	0xde, 0xf1, 0x09, 0x83, 0xe1, 0x1a, 0x94, 0xe3, 0x6d, 0xf4, 0x10, 0x36, 0x01, 0x28, 0xd1, 0xac,
	0x32, 0xc2, 0x9c, 0x8a, 0x74, 0x86, 0x96, 0x86, 0x8f, 0xff, 0xa3, 0xc0, 0x3c, 0xad, 0xfa, 0xfb,
	0x48, 0xea, 0x35, 0x58, 0xb0, 0x49, 0xaf, 0x39, 0xb0, 0x97, 0x67, 0x36, 0x6f, 0x93, 0x9e, 0x7c,
	0x18, 0xb4, 0xd3, 0xa0, 0xa6, 0xcc, 0x05, 0x6f, 0x41, 0xf2, 0x36, 0xe9, 0xb1, 0x3b, 0xf5, 0x2a,
	0x50, 0xeb, 0xa6, 0x4c, 0x0f, 0xef, 0x45, 0xe6, 0x6c, 0xd2, 0x7b, 0x26, 0x31, 0xf4, 0x02, 0x96,
	0x45, 0xbd, 0x25, 0x5e, 0xa3, 0x3b, 0xe2, 0xc7, 0x5f, 0x2b, 0xb0, 0x98, 0xf4, 0x48, 0x29, 0xfc,
	0xce, 0x0e, 0x99, 0x56, 0x5b, 0x47, 0x54, 0x5b, 0x8e, 0x57, 0x9b, 0x18, 0xe2, 0x8f, 0xe0, 0x21,
	0xaf, 0xe1, 0x7b, 0x38, 0x18, 0xdc, 0x81, 0xb5, 0x27, 0xa6, 0x49, 0x3d, 0xa5, 0xdc, 0x82, 0xbb,
	0x66, 0x27, 0xdd, 0x94, 0xa9, 0xc1, 0x9b, 0xe2, 0xc2, 0x46, 0x8c, 0xfd, 0x7b, 0x89, 0x78, 0x0d,
	0x45, 0x8d, 0xf8, 0xbe, 0xd3, 0xf5, 0x0c, 0x32, 0xae, 0x7b, 0x7a, 0x07, 0x42, 0xf7, 0xf4, 0x37,
	0x7d, 0xcc, 0xdb, 0xe4, 0x8a, 0x44, 0x6d, 0x1a, 0x1b, 0xd0, 0x16, 0xd5, 0x23, 0xdc, 0x73, 0xd3,
	0x32, 0x45, 0xb1, 0x42, 0x38, 0x75, 0x6c, 0xe2, 0x0f, 0x61, 0xe5, 0xc8, 0xd3, 0xed, 0xe0, 0x84,
	0x78, 0x1d, 0xcb, 0xf7, 0xa5, 0x6e, 0xeb, 0x4d, 0x28, 0x7a, 0x21, 0x2a, 0xf1, 0x7d, 0x43, 0xd1,
	0x1b, 0x18, 0xe1, 0xd5, 0x62, 0x23, 0xfc, 0x5b, 0x05, 0x96, 0xe9, 0xf5, 0x1d, 0xf6, 0xf5, 0x3d,
	0x27, 0x75, 0x0c, 0x8b, 0x49, 0x1c, 0xf4, 0x26, 0x34, 0x00, 0x22, 0xb0, 0xe1, 0xb3, 0x9e, 0x96,
	0x92, 0x64, 0x85, 0x8f, 0x61, 0x99, 0x3e, 0x30, 0xf7, 0x41, 0xcf, 0x47, 0xb0, 0xaa, 0x91, 0x2b,
	0xe7, 0x25, 0xb9, 0x0f, 0x67, 0x37, 0x80, 0xcf, 0x3c, 0xdd, 0xf6, 0x2f, 0x88, 0x17, 0xbb, 0x7b,
	0xd1, 0xb3, 0x79, 0xb1, 0x7e, 0x5b, 0xde, 0x13, 0x0c, 0x4f, 0x25, 0x19, 0x6e, 0xfc, 0x63, 0x0d,
	0xf2, 0xe2, 0x23, 0x8e, 0x3e, 0x85, 0x19, 0xde, 0xd2, 0xa3, 0x95, 0xf8, 0xe3, 0x2f, 0x6b, 0x0f,
	0x75, 0x69, 0x68, 0xde, 0x6d, 0xf7, 0xf1, 0xe6, 0x57, 0xff, 0xfd, 0xdf, 0x1f, 0x1e, 0xac, 0x62,
	0x54, 0xbf, 0xda, 0x8f, 0x65, 0xae, 0xd5, 0xb2, 0xbb, 0xee, 0x7b, 0x4a, 0x15, 0x7d, 0x06, 0x33,
	0x4c, 0x04, 0xf4, 0x51, 0xac, 0x95, 0x52, 0x54, 0x81, 0xba, 0x52, 0xe3, 0x02, 0xbb, 0x16, 0x0a,
	0xec, 0xda, 0x21, 0x15, 0xd8, 0xe9, 0xee, 0x99, 0xc6, 0xed, 0x53, 0xf7, 0x9f, 0xc0, 0xf4, 0x73,
	0xa7, 0x65, 0xd9, 0x28, 0x6e, 0xda, 0x64, 0x19, 0xa1, 0x2e, 0x26, 0xa7, 0x29, 0xe4, 0x0d, 0xe6,
	0x73, 0x05, 0x3f, 0x94, 0x7d, 0xb6, 0xa9, 0x1b, 0xea, 0xf2, 0x06, 0xca, 0x03, 0x7d, 0x3e, 0xda,
	0x8c, 0x7c, 0xa4, 0x89, 0x06, 0x75, 0x3d, 0x6b, 0x99, 0x86, 0x7a, 0x93, 0x85, 0xaa, 0xe2, 0x5d,
	0x39, 0xd4, 0x97, 0x51, 0x9b, 0x74, 0x53, 0x77, 0xe5, 0x3d, 0x34, 0xfc, 0x05, 0x94, 0x24, 0xe9,
	0x80, 0x86, 0xbd, 0xc7, 0x82, 0x22, 0x93, 0x34, 0xcc, 0xa2, 0x6e, 0xe0, 0x55, 0x39, 0xaa, 0x1b,
	0xef, 0xa7, 0x71, 0xbe, 0x84, 0xb9, 0x41, 0x65, 0x81, 0x5e, 0x19, 0x0a, 0x35, 0x20, 0x39, 0x32,
	0xa3, 0xed, 0xb3, 0x68, 0x8f, 0xf1, 0x0f, 0x47, 0xe5, 0xc8, 0xdd, 0xd1, 0xe0, 0xa7, 0x90, 0xa3,
	0x57, 0x5b, 0xca, 0x6e, 0x58, 0x61, 0xa8, 0x6b, 0xe9, 0x8b, 0x94, 0xd6, 0x45, 0x16, 0xb2, 0x8c,
	0x4a, 0x52, 0x48, 0x64, 0xc0, 0x0c, 0x97, 0x12, 0x72, 0x05, 0xcb, 0xda, 0x22, 0x33, 0x83, 0xd7,
	0x98, 0xbb, 0x47, 0xea, 0x2b, 0x59, 0x19, 0xf8, 0xcc, 0x0d, 0x45, 0xfe, 0x39, 0xc0, 0x11, 0x09,
	0x05, 0x04, 0xda, 0x89, 0x02, 0x65, 0xc9, 0x12, 0x75, 0xeb, 0x36, 0x13, 0x9a, 0xcb, 0x16, 0x0b,
	0xbe, 0x86, 0x56, 0x33, 0x82, 0xa3, 0x26, 0xe4, 0xe8, 0xe3, 0x25, 0x91, 0x35, 0x2c, 0x11, 0x46,
	0x95, 0x82, 0x9a, 0xe5, 0x9d, 0xe6, 0xf4, 0x6b, 0x98, 0xe1, 0xdf, 0x4a, 0xa9, 0xd4, 0xd3, 0x3a,
	0xfc, 0xcc, 0x20, 0x22, 0x85, 0x6a, 0x66, 0x0a, 0xbf, 0x82, 0x42, 0xd8, 0x96, 0xa3, 0x8a, 0x4c,
	0x88, 0x2c, 0x08, 0xd4, 0x95, 0x94, 0x15, 0xca, 0xd0, 0x36, 0x73, 0xaf, 0xa2, 0xca, 0x80, 0x7b,
	0x7e, 0x32, 0xac, 0x81, 0x47, 0x7f, 0x52, 0x40, 0xcd, 0xee, 0xe0, 0x51, 0x35, 0x56, 0x74, 0xa3,
	0xda, 0xfc, 0xcc, 0x1c, 0xdf, 0x62, 0x20, 0xea, 0x8d, 0x6a, 0x0a, 0x08, 0xf9, 0x25, 0xae, 0x77,
	0x22, 0x9f, 0x94, 0xdb, 0x3f, 0x2b, 0xb0, 0x79, 0xab, 0x10, 0x40, 0x6f, 0x24, 0x38, 0xbf, 0x23,
	0xbe, 0x06, 0xc3, 0xf7, 0x7a, 0x75, 0x02, 0x7c, 0xc8, 0x07, 0x88, 0xe5, 0x04, 0x52, 0x23, 0x20,
	0x43, 0x1a, 0x63, 0xc2, 0xbb, 0x2f, 0xc7, 0xe3, 0x47, 0x24, 0x90, 0x50, 0x46, 0x08, 0x14, 0x42,
	0x75, 0x20, 0xd5, 0x42, 0x42, 0x67, 0x48, 0xb5, 0x30, 0x20, 0x25, 0xf0, 0xab, 0x2c, 0xe0, 0x0e,
	0xda, 0x1a, 0x11, 0x10, 0x39, 0x50, 0x08, 0x35, 0x85, 0x14, 0x26, 0x21, 0x33, 0x46, 0xe5, 0xa5,
	0x4e, 0x90, 0xd7, 0x6f, 0x60, 0x6e, 0xb0, 0x71, 0x97, 0x1e, 0xd4, 0x54, 0x8d, 0xa0, 0x6e, 0x64,
	0xae, 0xd3, 0x4c, 0x6b, 0x0c, 0xc2, 0x1e, 0x1a, 0x13, 0x02, 0x72, 0x01, 0xe2, 0x8e, 0x57, 0x3a,
	0xcc, 0xa1, 0x16, 0x3e, 0x33, 0x69, 0x11, 0xb1, 0x3a, 0x6e, 0xc4, 0xdf, 0x29, 0x80, 0x86, 0x7b,
	0x7a, 0x84, 0xe5, 0xdb, 0x96, 0xde, 0x7e, 0x67, 0x42, 0xf8, 0x09, 0x83, 0xf0, 0x76, 0x63, 0x7f,
	0x3c, 0x08, 0x89, 0xcb, 0xf6, 0x7b, 0x05, 0x96, 0x53, 0xbb, 0x7e, 0xb4, 0x9b, 0x42, 0xc7, 0x04,
	0xb0, 0xde, 0x65, 0xb0, 0x0e, 0xaa, 0x93, 0xc3, 0x42, 0x7f, 0x51, 0x60, 0x3e, 0xd1, 0x9b, 0x23,
	0xe9, 0x9b, 0x90, 0xda, 0xb5, 0x67, 0xe2, 0x38, 0x61, 0x38, 0x3e, 0xc4, 0x87, 0x03, 0x38, 0xa2,
	0x7e, 0xb2, 0x96, 0x86, 0x28, 0x5e, 0xa5, 0xe3, 0x9b, 0xba, 0x1b, 0x45, 0xa3, 0x94, 0x7d, 0xad,
	0xc0, 0xdc, 0x60, 0x97, 0x2d, 0x95, 0x6d, 0xaa, 0x0c, 0x90, 0xca, 0x36, 0xa5, 0x3d, 0x0f, 0xa9,
	0x42, 0xa3, 0xa9, 0x4a, 0xc2, 0x41, 0xff, 0x52, 0x60, 0x6e, 0xb0, 0x4d, 0x97, 0xb0, 0xa4, 0xf6,
	0xef, 0x99, 0x44, 0x5d, 0x32, 0x14, 0xe7, 0xea, 0x67, 0xf7, 0x42, 0x94, 0xbc, 0x26, 0x75, 0xd4,
	0xec, 0xda, 0xff, 0x5b, 0x81, 0x85, 0xa4, 0x20, 0x40, 0xdb, 0x52, 0xdb, 0x9f, 0xaa, 0x15, 0x32,
	0x81, 0x13, 0x06, 0xbc, 0x59, 0xfd, 0x6e, 0x81, 0xa3, 0x7f, 0x2a, 0xb0, 0x7e, 0x8b, 0xf2, 0x40,
	0x8f, 0xe3, 0xff, 0x93, 0x8d, 0xd4, 0x27, 0x99, 0xb9, 0xfc, 0x9c, 0xe5, 0xf2, 0x01, 0x7e, 0x7f,
	0xcc, 0x52, 0x08, 0x44, 0x28, 0x86, 0x5a, 0x26, 0xf9, 0x7c, 0x86, 0x79, 0x3e, 0xf8, 0x26, 0x00,
	0x00, 0xff, 0xff, 0xf8, 0x4e, 0xfe, 0xba, 0xe8, 0x1b, 0x00, 0x00,
}
